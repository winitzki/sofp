#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usetheme[secheader]{Boadilla}
\usecolortheme{seahorse}
\title[Chapter 11: Monad transformers]{Chapter 11:
Computations in a functor context III}
\subtitle{Monad transformers}
\author{Sergei Winitzki}
\date{2019-01-05}
\institute[ABTB]{Academy by the Bay}
\setbeamertemplate{headline}{} % disable headline at top
\setbeamertemplate{navigation symbols}{} % disable navigation bar at bottom
\usepackage[all]{xy} % xypic
\usepackage[nocenter]{qtree} % simple tree drawing
\usepackage{relsize} % make math symbols larger or smaller
\usepackage{stmaryrd} % some extra symbols such as \fatsemi
\newcommand{\forwardcompose}{\hspace{1.0pt}\ensuremath\mathsmaller{\fatsemi}\hspace{1.5pt}}
% this is ugly: 
%\newcommand{\bef}{\ensuremath\raisebox{2pt}{$\mathsmaller{\circ}$}\hspace{-3.3pt},}
%\makeatletter
% Macros to assist LyX with XYpic when using scaling.
\newcommand{\xyScaleX}[1]{%
\makeatletter
\xydef@\xymatrixcolsep@{#1}
\makeatother
} % end of \xyScaleX
\makeatletter
\newcommand{\xyScaleY}[1]{%
\makeatletter
\xydef@\xymatrixrowsep@{#1}
\makeatother
} % end of \xyScaleY
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\bef}{\forwardcompose}
{\fatsemi}
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frame{
\backslash
titlepage}
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Beginning of slides.
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Computations within a functor context: Combining monads
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Programs often need to combine monadic effects (see code)
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Effect
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $\triangleq$
\end_inset

 what else happens in 
\size footnotesize

\begin_inset Formula $A\Rightarrow M^{B}$
\end_inset


\size default
 besides computing 
\begin_inset Formula $B$
\end_inset

 from 
\begin_inset Formula $A$
\end_inset


\end_layout

\begin_layout Itemize
Examples of effects for some standard monads:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Option
\family default
\size default
\color inherit
 – computation will have no result or a single result
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
List
\family default
\size default
\color inherit
 – computation will have zero, one, or multiple results
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Either
\family default
\size default
\color inherit
 – computation may fail to obtain its result, reports error
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Reader
\family default
\size default
\color inherit
 – computation needs to read an external context value
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Writer
\family default
\size default
\color inherit
 – some value will be appended to a (monoidal) accumulator
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Future
\family default
\size default
\color inherit
 – computation will be scheduled to run later
\end_layout

\end_deeper
\begin_layout Itemize
How to combine several effects in the same functor block (
\family typewriter
\size footnotesize
\color blue
for
\family default
\size default
\color inherit
/
\family typewriter
\size footnotesize
\color blue
yield
\family default
\size default
\color inherit
)?
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.35cm}
\end_layout

\end_inset


\family typewriter
\color blue

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\size footnotesize
\color darkgray
// This is not valid Scala!
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
val result = for { i 
\begin_inset Formula $\leftarrow$
\end_inset

 1 to n
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
   j 
\begin_inset Formula $\leftarrow$
\end_inset

 Future { q(i) }
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
   k 
\begin_inset Formula $\leftarrow$
\end_inset

 maybeError(j) : Try[Int]
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
} yield f(k)
\end_layout

\begin_layout LyX-Code

\size footnotesize
\color darkgray
// What should be the type of result??
\end_layout

\end_inset


\begin_inset space ~
\end_inset

 
\begin_inset space ~
\end_inset

 
\begin_inset space ~
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  
\family default
\color darkgray
// This is not valid Scala!
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
(1 to n).flatMap { i 
\begin_inset Formula $\Rightarrow$
\end_inset


\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
   Future(q(i)).flatMap { j 
\begin_inset Formula $\Rightarrow$
\end_inset


\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
     maybeError(j).map { k 
\begin_inset Formula $\Rightarrow$
\end_inset


\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
       f(k)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
         }}}
\end_layout

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
The code will work if we 
\begin_inset Quotes eld
\end_inset

unify
\begin_inset Quotes erd
\end_inset

 all effects in a new, larger monad
\end_layout

\begin_layout Itemize
Need to compute the type of new monad that contains all given effects
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Combining monadic effects I.
 Trial and error
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
There are several ways of combining two monads into a new monad:
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $M_{1}^{A}$
\end_inset

 and 
\begin_inset Formula $M_{2}^{A}$
\end_inset

 are monads then 
\begin_inset Formula $M_{1}^{A}\times M_{2}^{A}$
\end_inset

 is also a monad
\end_layout

\begin_deeper
\begin_layout Itemize
But 
\begin_inset Formula $M_{1}^{A}\times M_{2}^{A}$
\end_inset

 describes two separate values with two separate effects
\end_layout

\end_deeper
\begin_layout Itemize
If 
\begin_inset Formula $M_{1}^{A}$
\end_inset

 and 
\begin_inset Formula $M_{2}^{A}$
\end_inset

 are monads then 
\begin_inset Formula $M_{1}^{A}+M_{2}^{A}$
\end_inset

 is usually not a monad
\end_layout

\begin_deeper
\begin_layout Itemize
If it worked, it would be a choice between two different values / effects
\end_layout

\end_deeper
\begin_layout Itemize
If 
\begin_inset Formula $M_{1}^{A}$
\end_inset

 and 
\begin_inset Formula $M_{2}^{A}$
\end_inset

 are monads then one of 
\begin_inset Formula $M_{1}^{M_{2}^{A}}$
\end_inset

 or 
\begin_inset Formula $M_{2}^{M_{1}^{A}}$
\end_inset

 is often a monad
\end_layout

\begin_layout Itemize
Examples and counterexamples for functor composition:
\end_layout

\begin_deeper
\begin_layout Itemize
Combine 
\begin_inset Formula $Z\Rightarrow A$
\end_inset

 and 
\begin_inset Formula $\text{List}^{A}$
\end_inset

 as 
\begin_inset Formula $Z\Rightarrow\text{List}^{A}$
\end_inset


\end_layout

\begin_layout Itemize
Combine 
\family typewriter
\size footnotesize
\color blue
Future[A]
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
Option[A]
\family default
\size default
\color inherit
 as 
\family typewriter
\size footnotesize
\color blue
Future[Option[A]]
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
But 
\family typewriter
\size footnotesize
\color blue
Either[Z, Future[A]]
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
Option[Z 
\begin_inset Formula $\Rightarrow$
\end_inset

 A]
\family default
\size default
\color inherit
 are not monads
\end_layout

\begin_layout Itemize
Neither 
\family typewriter
\size footnotesize
\color blue
Future[State[A]]
\family default
\size default
\color inherit
 nor 
\family typewriter
\size footnotesize
\color blue
State[Future[A]]
\family default
\size default
\color inherit
 are monads
\end_layout

\end_deeper
\begin_layout Itemize
The order of effects matters when composition works both ways: 
\end_layout

\begin_deeper
\begin_layout Itemize
Combine 
\family typewriter
\size footnotesize
\color blue
Either
\family default
\size default
\color inherit
 (
\begin_inset Formula $M_{1}^{A}=Z+A$
\end_inset

) and 
\family typewriter
\size footnotesize
\color blue
Writer
\family default
\size default
\color inherit
 (
\begin_inset Formula $M_{2}^{A}=W\times A$
\end_inset

) 
\end_layout

\begin_deeper
\begin_layout Itemize
as 
\begin_inset Formula $Z+W\times A$
\end_inset

 – either compute result and write a message, or all fails
\end_layout

\begin_layout Itemize
as 
\begin_inset Formula $\left(Z+A\right)\times W$
\end_inset

 – message is always written, but computation may fail
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Find a general way of defining a new monad with combined effects
\end_layout

\begin_layout Itemize
Derive properties required for the new monad
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Combining monadic effects II.
 Lifting into a larger monad
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.15cm}
\end_layout

\end_inset


\size default
If a 
\begin_inset Quotes eld
\end_inset

big monad
\begin_inset Quotes erd
\end_inset

 
\family typewriter
\size footnotesize
\color blue
BigM[A]
\family default
\size default
\color inherit
 
\emph on
somehow
\emph default
 combines all the needed effects:
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.15cm}
\backslash
hspace{-0.35cm}
\end_layout

\end_inset


\family typewriter
\color blue

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
// This could be valid Scala...
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
val result: BigM[Int] = for {
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
   i 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{1}$
\end_inset

(1 to n)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
   j 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{2}$
\end_inset

(Future{ q(i) })
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
   k 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{3}$
\end_inset

(maybeError(j))
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
} yield f(k)
\end_layout

\end_inset

 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
 
\family roman
\color darkgray
// If we define the various
\end_layout

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
 // required 
\begin_inset Quotes eld
\end_inset

lifting
\begin_inset Quotes erd
\end_inset

 functions:
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
def lift
\begin_inset Formula $_{1}$
\end_inset

[A]: Seq[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 BigM[A] = ???
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
def lift
\begin_inset Formula $_{2}$
\end_inset

[A]: Future[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 BigM[A] = ???
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
def lift
\begin_inset Formula $_{3}$
\end_inset

[A]: Try[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 BigM[A] = ???   
\end_layout

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Itemize
Example 1: combining as 
\family typewriter
\size footnotesize
\color blue
BigM[A] = Future[Option[A]]
\family default
\size default
\color inherit
 with liftings:
\end_layout

\begin_layout LyX-Code

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.4cm}
\end_layout

\end_inset


\family typewriter
\color blue
def lift
\begin_inset Formula $_{1}$
\end_inset

[A]: Option[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 Future[Option[A]] = Future.successful(_)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
def lift
\begin_inset Formula $_{2}$
\end_inset

[A]: Future[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 Future[Option[A]] = _.map(x 
\begin_inset Formula $\Rightarrow$
\end_inset

 Some(x))
\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.15cm}
\end_layout

\end_inset


\size default
Example 2: combining as 
\family typewriter
\size footnotesize
\color blue
BigM[A] = List[Try[A]]
\family default
\size default
\color inherit
 with liftings:
\end_layout

\begin_layout LyX-Code

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.05cm}
\end_layout

\end_inset


\family typewriter
\color blue
def lift
\begin_inset Formula $_{1}$
\end_inset

[A]: Try[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 List[Try[A]] = x 
\begin_inset Formula $\Rightarrow$
\end_inset

 List(x)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
def lift
\begin_inset Formula $_{2}$
\end_inset

[A]: List[A] 
\begin_inset Formula $\Rightarrow$
\end_inset

 List[Try[A]] = _.map(x 
\begin_inset Formula $\Rightarrow$
\end_inset

 Success(x))
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset


\size default
Remains to be understood:
\end_layout

\begin_layout Itemize
Finding suitable laws for the liftings; checking that the laws hold
\end_layout

\begin_layout Itemize
Building a 
\begin_inset Quotes eld
\end_inset

big monad
\begin_inset Quotes erd
\end_inset

 out of 
\begin_inset Quotes eld
\end_inset

smaller
\begin_inset Quotes erd
\end_inset

 ones, with lawful liftings
\end_layout

\begin_deeper
\begin_layout Itemize
Is this always possible? Unique? Are there alternative solutions?
\end_layout

\end_deeper
\begin_layout Itemize
Ways of reducing the complexity of code; make liftings automatic
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Laws for monad liftings I.
 Identity laws
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Whatever identities we expect to hold for monadic programs must continue
 to hold after lifting 
\family typewriter
\size footnotesize
\color blue
M
\begin_inset Formula $_{1}$
\end_inset


\family default
\size default
\color inherit
 or 
\family typewriter
\size footnotesize
\color blue
M
\begin_inset Formula $_{2}$
\end_inset


\family default
\size default
\color inherit
 values into the 
\begin_inset Quotes eld
\end_inset

big monad
\begin_inset Quotes erd
\end_inset

 
\family typewriter
\size footnotesize
\color blue
BigM
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
We assume that 
\family typewriter
\size footnotesize
\color blue
M
\begin_inset Formula $_{1}$
\end_inset


\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
M
\begin_inset Formula $_{2}$
\end_inset


\family default
\size default
\color inherit
, and 
\family typewriter
\size footnotesize
\color blue
BigM
\family default
\size default
\color inherit
 already satisfy all the monad laws
\end_layout

\begin_layout Standard
Consider the various functor block constructions containing the liftings:
\end_layout

\begin_layout Itemize
Left identity law after 
\family typewriter
\size footnotesize
\color blue
lift
\begin_inset Formula $_{1}$
\end_inset


\family default
\size default
\color inherit
 
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.3cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\family typewriter
\color blue

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "54col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
// Anywhere inside a for/yield:
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
i 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{1}$
\end_inset

(M
\begin_inset Formula $_{1}$
\end_inset

.pure(x))
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
j 
\begin_inset Formula $\leftarrow$
\end_inset

 bigM(i) 
\family roman
\color darkgray
// Any BigM value.
\end_layout

\end_inset


\begin_inset space ~
\end_inset

 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "54col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
// Must be equivalent to...
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
i = x
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
j 
\begin_inset Formula $\leftarrow$
\end_inset

 bigM(x)
\end_layout

\end_inset


\begin_inset VSpace smallskip
\end_inset

lift
\begin_inset Formula $_{1}$
\end_inset

(M
\begin_inset Formula $_{1}$
\end_inset

.pure(x)).flatMap(b) = b(x)
\family default
\size default
\color inherit
 — in terms of Kleisli composition 
\begin_inset Formula $\left(\diamond\right)$
\end_inset

:
\end_layout

\begin_layout Standard
\align center

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\begin_inset Formula $\left(\text{pure}_{M_{1}}\bef\text{lift}_{1}\right)^{:X\Rightarrow\text{BigM}^{X}}\diamond b^{:X\Rightarrow\text{BigM}^{Y}}=b$
\end_inset


\begin_inset space \hspace*{\fill}
\end_inset

with 
\begin_inset Formula $f^{:X\Rightarrow M^{Y}}\diamond g^{:Y\Rightarrow M^{Z}}\triangleq x\Rightarrow f(x).\text{flatMap}(g)$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\size default
Right identity law after 
\family typewriter
\size footnotesize
\color blue
lift
\begin_inset Formula $_{1}$
\end_inset


\family default
\size default
\color inherit
 
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.3cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\family typewriter
\color blue

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "54col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
// Anywhere inside a for/yield:
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 bigM 
\family roman
\color darkgray
// Any BigM value.
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
i 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{1}$
\end_inset

(M
\begin_inset Formula $_{1}$
\end_inset

.pure(x))
\end_layout

\end_inset


\begin_inset space ~
\end_inset

 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "54col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
// Must be equivalent to...
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 bigM
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
i = x
\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset

b.flatMap(M
\begin_inset Formula $_{1}$
\end_inset

.pure andThen lift
\begin_inset Formula $_{1}$
\end_inset

) = b
\family default
\size default
\color inherit
 — in terms of Kleisli composition:
\end_layout

\begin_layout Standard
\align center

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\begin_inset Formula $b^{:X\Rightarrow\text{BigM}^{Y}}\diamond\left(\text{pure}_{M_{1}}\bef\text{lift}_{1}\right)^{:Y\Rightarrow\text{BigM}^{Y}}=b$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.15cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\size default
The same identity laws must hold for 
\family typewriter
\size footnotesize
\color blue
M
\begin_inset Formula $_{2}$
\end_inset


\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
lift
\begin_inset Formula $_{2}$
\end_inset


\family default
\size default
\color inherit
 as well
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Laws for monad liftings II.
 Simplifying the laws
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\size default

\begin_inset Formula $\big(\text{pure}_{M_{1}}\bef\text{lift}_{1}\big)$
\end_inset

 is a unit for the Kleisli composition 
\begin_inset Formula $\diamond$
\end_inset

 in the monad 
\family typewriter
\size footnotesize
\color blue
BigM
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
But the monad 
\family typewriter
\size footnotesize
\color blue
BigM
\family default
\size default
\color inherit
 already has a unit element, namely 
\begin_inset Formula $\text{pure}_{\text{BigM}}$
\end_inset


\end_layout

\begin_layout Itemize
The two-sided unit element is always unique: 
\begin_inset Formula $\text{u}=\text{u}\diamond\text{u}^{\prime}=\text{u}^{\prime}$
\end_inset


\end_layout

\begin_layout Itemize
So the two identity laws for 
\begin_inset Formula $\big(\text{pure}_{M_{1}}\bef\text{lift}_{1}\big)$
\end_inset

 can be reduced to one law:
\size footnotesize

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\begin_inset Formula 
\[
\text{pure}_{M_{1}}\bef\text{lift}_{1}=\text{pure}_{\text{BigM}}
\]

\end_inset


\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.15cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\size default
Refactoring a portion of a monadic program under 
\family typewriter
\size footnotesize
\color blue
lift
\begin_inset Formula $_{1}$
\end_inset


\family default
\size default
\color inherit
 gives another law:
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\family typewriter
\color blue

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "58col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
// Anywhere inside a for/yield, this...
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
i 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{1}$
\end_inset

(p) 
\family roman
\color darkgray
// Any M
\begin_inset Formula $_{1}$
\end_inset

 value.
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
j 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{1}$
\end_inset

(q(i)) 
\family roman
\color darkgray
// Any M
\begin_inset Formula $_{1}$
\end_inset

 value.
\end_layout

\end_inset


\begin_inset space ~
\end_inset

 
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family roman
\size footnotesize
\color darkgray
// must be equivalent to...
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
pq = p.flatMap(q) 
\family roman
\color darkgray
// In M
\begin_inset Formula $_{1}$
\end_inset

.
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
j 
\begin_inset Formula $\leftarrow$
\end_inset

 lift
\begin_inset Formula $_{1}$
\end_inset

(pq)
\family roman
\color darkgray
  // Now lift it.
\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset

lift
\begin_inset Formula $_{1}$
\end_inset

(p).flatMap(q andThen lift
\begin_inset Formula $_{1}$
\end_inset

) = lift
\begin_inset Formula $_{1}$
\end_inset

(p flatMap q)
\end_layout

\begin_layout Itemize
Rewritten equivalently through 
\size footnotesize

\begin_inset Formula $\text{flm}_{M}:\left(A\Rightarrow M^{B}\right)\Rightarrow M^{A}\Rightarrow M^{B}$
\end_inset


\size default
 as
\end_layout

\begin_layout Standard
\align center

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\begin_inset Formula $\text{lift}_{1}\bef\text{flm}_{\text{BigM}}\left(q\bef\text{lift}_{1}\right)=\text{flm}_{M_{1}}q\bef\text{lift}_{1}$
\end_inset

 – both sides are functions 
\begin_inset Formula $M_{1}^{A}\Rightarrow\text{BigM}^{B}$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.3cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\size default
Rewritten equivalently through 
\size footnotesize

\begin_inset Formula $\text{ftn}_{M}:M^{M^{A}}\Rightarrow M^{A}$
\end_inset

,
\size default
 the law is
\end_layout

\begin_layout Standard
\align center

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\begin_inset Formula $\text{lift}_{1}\bef\text{fmap}_{\text{BigM}}\text{lift}_{1}\bef\text{ftn}_{\text{BigM}}=\text{ftn}_{M_{1}}\bef\text{lift}_{1}$
\end_inset

 – both sides are functions 
\begin_inset Formula $M_{1}^{M_{1}^{A}}\Rightarrow\text{BigM}^{A}$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.3cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\size default
In terms of Kleisli composition 
\begin_inset Formula $\diamond_{M}$
\end_inset

 it becomes the 
\series bold
composition law
\series default
:
\end_layout

\begin_layout Standard
\align center

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\begin_inset Formula $\big(b^{:X\Rightarrow M_{1}^{Y}}\bef\text{lift}_{1}\big)\diamond_{\text{BigM}}\big(c^{:Y\Rightarrow M_{1}^{Z}}\bef\text{lift}_{1}\big)=\left(b\diamond_{M_{1}}c\right)\bef\text{lift}_{1}$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.3cm}
\backslash
hspace{-0.0cm}
\end_layout

\end_inset


\size default
Liftings 
\begin_inset Formula $\text{lift}_{1}$
\end_inset

 and 
\begin_inset Formula $\text{lift}_{2}$
\end_inset

 must obey an identity law and a composition law
\end_layout

\begin_deeper
\begin_layout Itemize
The laws say that the liftings 
\series bold
commute with
\series default
 the monads' operations
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Laws for monad liftings III.
 The naturality law
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Show that 
\begin_inset Formula $\text{lift}_{1}:M_{1}^{A}\Rightarrow\text{BigM}^{A}$
\end_inset

 is a natural transformation 
\end_layout

\begin_layout Itemize
It maps 
\begin_inset Formula $\text{pure}_{M_{1}}$
\end_inset

 to 
\begin_inset Formula $\text{pure}_{\text{BigM}}$
\end_inset

 and 
\begin_inset Formula $\text{flm}_{M_{1}}$
\end_inset

 to 
\begin_inset Formula $\text{flm}_{\text{BigM}}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\text{lift}_{1}$
\end_inset

 is a 
\series bold
monadic morphism
\series default
 between monads 
\begin_inset Formula $M_{1}^{\bullet}$
\end_inset

 and 
\begin_inset Formula $\text{BigM}^{\bullet}$
\end_inset


\end_layout

\begin_layout Itemize
example: monad 
\begin_inset Quotes eld
\end_inset

interpreters
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $M^{A}\Rightarrow N^{A}$
\end_inset

 are monadic morphisms
\end_layout

\end_deeper
\begin_layout Standard
The (functor) naturality law: for any 
\begin_inset Formula $f:X\Rightarrow Y$
\end_inset

, 
\size footnotesize

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset


\size default

\begin_inset Formula 
\[
\text{lift}_{1}\bef\text{fmap}_{\text{BigM}}f=\text{fmap}_{M_{1}}f\bef\text{lift}_{1}
\]

\end_inset


\size footnotesize

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.5cm}
\end_layout

\end_inset


\begin_inset Formula 
\[
\xymatrix{\xyScaleY{2pc}\xyScaleX{3pc}M_{1}^{X}\ar[d]\sb(0.45){\text{fmap}_{M_{1}}\,f^{:X\Rightarrow Y}}\ar[r]\sp(0.45){\ \text{lift}_{1}} & \text{BigM}^{X}\ar[d]\sp(0.45){\text{fmap}_{\text{BigM}}\,f^{:X\Rightarrow Y}}\\
M_{1}^{Y}\ar[r]\sp(0.45){\text{lift}_{1}} & \text{BigM}^{Y}
}
\]

\end_inset


\size default
Derivation of the functor naturality law for 
\begin_inset Formula $\text{lift}_{1}$
\end_inset

:
\end_layout

\begin_layout Itemize
Express 
\begin_inset Formula $\text{fmap}$
\end_inset

 as 
\begin_inset Formula $\text{fmap}_{M}f\triangleq f^{\uparrow M}=\text{flm}_{M}\left(f\bef\text{pure}_{M}\right)$
\end_inset

 for both monads
\end_layout

\begin_layout Itemize
Given 
\begin_inset Formula $f^{:X\Rightarrow Y}$
\end_inset

, use the law 
\size footnotesize

\begin_inset Formula $\text{flm}_{M_{1}}q\bef\text{lift}_{1}=\text{lift}_{1}\bef\text{flm}_{\text{BigM}}\left(q\bef\text{lift}_{1}\right)$
\end_inset


\size default
 to compute 
\size footnotesize

\begin_inset Formula $\text{flm}_{M_{1}}\left(f\bef\text{pure}_{M_{1}}\right)\bef\text{lift}_{1}=\text{lift}_{1}\bef\text{flm}_{\text{BigM}}\left(f\bef\text{pure}_{M_{1}}\bef\text{lift}_{1}\right)=\text{lift}_{1}\bef\text{flm}_{\text{BigM}}\left(f\bef\text{pure}_{\text{BigM}}\right)=\text{lift}_{1}\bef\text{fmap}_{\text{BigM}}f$
\end_inset


\end_layout

\begin_layout Standard
A monadic morphism is always also a natural transformation of the functors
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Monad transformers I: Motivation
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset


\size default
Combine 
\begin_inset Formula $Z\Rightarrow A$
\end_inset

 and 
\begin_inset Formula $1+A$
\end_inset

: only 
\begin_inset Formula $Z\Rightarrow1+A$
\end_inset

 works, not 
\begin_inset Formula $1+\left(Z\Rightarrow A\right)$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
It is not possible to combine monads via a natural bifunctor 
\begin_inset Formula $B^{M_{1},M_{2}}$
\end_inset


\end_layout

\begin_layout Itemize
It is not possible to combine arbitrary monads as 
\begin_inset Formula $M_{1}^{M_{2}^{\bullet}}$
\end_inset

 or 
\begin_inset Formula $M_{2}^{M_{1}^{\bullet}}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Example: state monad 
\begin_inset Formula $\text{St}_{S}^{A}\triangleq S\Rightarrow A\times S$
\end_inset

 does not compose
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
The trick: for a fixed 
\series bold
base 
\series default
monad 
\begin_inset Formula $L^{\bullet}$
\end_inset

, let 
\begin_inset Formula $M^{\bullet}$
\end_inset

 (
\series bold
foreign 
\series default
monad) vary
\end_layout

\begin_layout Itemize
Call the desired result 
\begin_inset Formula $T_{L}^{M,\bullet}$
\end_inset

 the 
\series bold
monad transformer for
\series default
 
\begin_inset Formula $L$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
In Scala: 
\family typewriter
\size footnotesize
\color blue
MyMonadT[M[_]:Monad, A]
\family default
\size default
\color inherit
 – e.g.
 
\family typewriter
\size footnotesize
\color blue
ReaderT
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
StateT
\family default
\size default
\color inherit
, etc.
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $T_{L}^{M,\bullet}$
\end_inset

 is generic in 
\begin_inset Formula $M$
\end_inset

 but not in 
\begin_inset Formula $L$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
No general formula for monad transformers seems to exist
\end_layout

\begin_layout Itemize
For each base monad 
\begin_inset Formula $L$
\end_inset

, a different construction is needed
\end_layout

\begin_deeper
\begin_layout Itemize
Some transformers are compositions 
\begin_inset Formula $L^{M^{\bullet}}$
\end_inset

 or 
\begin_inset Formula $M^{L^{\bullet}}$
\end_inset

, others are not
\end_layout

\end_deeper
\begin_layout Itemize
Do all monads 
\begin_inset Formula $L$
\end_inset

 have a transformer? (Unknown.)
\end_layout

\end_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.3cm}
\end_layout

\end_inset


\size default
To combine 3 or more monads, 
\begin_inset Quotes eld
\end_inset

stack up
\begin_inset Quotes erd
\end_inset

 the transformers as 
\begin_inset Formula $T_{L_{1}}^{T_{L_{2}}^{T_{L_{3}}^{M}},\bullet}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Example in Scala: 
\family typewriter
\size footnotesize
\color blue
StateT[S, ListT[Reader[R, ?], ?], A]
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
Substitute nested transformers into the monad argument, not as 
\begin_inset Formula $A$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
This is called a 
\series bold
monad stack
\series default
 – but may not be 
\emph on
functor composition
\end_layout

\begin_deeper
\begin_layout Itemize
because e.g.
\begin_inset space ~
\end_inset


\family typewriter
\size footnotesize
\color blue
State[S, List[Reader[R, A]]]
\family default
\size default
\color inherit
 is not a monad
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Monad transformers II: The requirements
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset


\size default
A 
\series bold
monad transformer
\series default
 for a 
\series bold
base
\series default
 monad 
\begin_inset Formula $L^{\bullet}$
\end_inset

 is a type constructor 
\begin_inset Formula $T_{L}^{M,\bullet}$
\end_inset

 parameterized by a monad 
\begin_inset Formula $M^{\bullet}$
\end_inset

, such that for all monads 
\begin_inset Formula $M^{\bullet}$
\end_inset

:
\end_layout

\begin_layout Itemize
\begin_inset Formula $T_{L}^{M,\bullet}$
\end_inset

 is a monad (the monad 
\begin_inset Formula $M$
\end_inset

 
\series bold
transformed with
\series default
 
\begin_inset Formula $T_{L}$
\end_inset

)
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Lifting
\begin_inset Quotes erd
\end_inset

 – a monadic morphism 
\begin_inset Formula $\text{lift}_{L}^{M}:M^{A}\leadsto T_{L}^{M,A}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Base lifting
\begin_inset Quotes erd
\end_inset

 – a monadic morphism 
\begin_inset Formula $\text{blift}:L^{A}\leadsto T_{L}^{M,A}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

base lifting
\begin_inset Quotes erd
\end_inset

 could not possibly be natural in 
\begin_inset Formula $L^{\bullet}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Transformed identity monad (
\begin_inset Formula $\text{Id}$
\end_inset

) must become 
\begin_inset Formula $L$
\end_inset

, i.e.
\begin_inset space ~
\end_inset


\begin_inset Formula $T_{L}^{\text{Id},\bullet}\cong L^{\bullet}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $T_{L}^{M,\bullet}$
\end_inset

 is 
\series bold
monadically natural
\series default
 in 
\begin_inset Formula $M^{\bullet}$
\end_inset

 (but not in 
\begin_inset Formula $L^{\bullet}$
\end_inset

)
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $T_{L}^{M,\bullet}$
\end_inset

 is natural w.r.t.
\begin_inset space ~
\end_inset

a monadic functor 
\begin_inset Formula $M^{\bullet}$
\end_inset

 as a type parameter
\end_layout

\begin_layout Itemize
For any monad 
\begin_inset Formula $N^{\bullet}$
\end_inset

 and a monadic morphism 
\begin_inset Formula $f:M^{\bullet}\leadsto N^{\bullet}$
\end_inset

 we need to have a monadic morphism 
\begin_inset Formula $T_{L}^{M,\bullet}\leadsto T_{L}^{N,\bullet}$
\end_inset

 for the transformed monads: 
\begin_inset Formula $\text{mrun}_{L}^{M}:\left(M^{\bullet}\leadsto N^{\bullet}\right)\Rightarrow T_{L}^{M,\bullet}\leadsto T_{L}^{N,\bullet}$
\end_inset

 with the 
\begin_inset Quotes eld
\end_inset

lifting
\begin_inset Quotes erd
\end_inset

 laws
\end_layout

\begin_deeper
\begin_layout Itemize
If we implement 
\begin_inset Formula $T_{L}^{M,\bullet}$
\end_inset

 only via 
\begin_inset Formula $M$
\end_inset

's monad methods, naturality will hold 
\end_layout

\end_deeper
\begin_layout Itemize
Cf.
\begin_inset space ~
\end_inset


\family typewriter
\size footnotesize
\color blue
traverse
\family default
\size small
\color inherit

\begin_inset Formula $:L^{A}\Rightarrow(A\Rightarrow F^{B})\Rightarrow F^{L^{B}}$
\end_inset

 – natural w.r.t.
\begin_inset space ~
\end_inset

applicative 
\begin_inset Formula $F^{\bullet}$
\end_inset


\end_layout

\begin_layout Itemize
This can be used for lifting a 
\begin_inset Quotes eld
\end_inset

runner
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $M^{A}\leadsto A$
\end_inset

 to 
\begin_inset Formula $T_{L}^{M,\bullet}\leadsto T_{L}^{\text{Id},\bullet}=L^{\bullet}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Base runner
\begin_inset Quotes erd
\end_inset

: lifts 
\begin_inset Formula $L^{A}\leadsto A$
\end_inset

 into a monadic morphism 
\begin_inset Formula $T_{L}^{M,\bullet}\leadsto M^{\bullet}$
\end_inset

; so 
\begin_inset Formula $\text{brun}_{L}^{M}:\left(L^{\bullet}\leadsto\bullet\right)\Rightarrow T_{L}^{M,\bullet}\leadsto M^{\bullet}$
\end_inset

, must commute with 
\family typewriter
\size footnotesize
\color blue
lift
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
blift
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Monad transformers III: First examples
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.15cm}
\end_layout

\end_inset


\size default
Recall these monad constructions:
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $M^{A}$
\end_inset

 is a monad then 
\begin_inset Formula $R\Rightarrow M^{A}$
\end_inset

 is also a monad (for a fixed type 
\begin_inset Formula $R$
\end_inset

)
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $M^{A}$
\end_inset

 is a monad then 
\begin_inset Formula $M^{Z+A\times W}$
\end_inset

 is also a monad (for fixed 
\begin_inset Formula $W,$
\end_inset

 
\begin_inset Formula $Z$
\end_inset

)
\end_layout

\begin_layout Standard
This gives the monad transformers for base monads 
\family typewriter
\size footnotesize
\color blue
Reader
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Writer
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Either
\family default
\size default
\color inherit
:
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
type ReaderT[R, M[_], A] = R 
\begin_inset Formula $\Rightarrow$
\end_inset

 M[A]
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
type EitherT[Z, M[_], A] = M[Either[Z, A]]
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
type WriterT[W, M[_], A] = M[(W, A)]
\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset


\family typewriter
\color blue
ReaderT
\family default
\size default
\color inherit
 composes with the foreign monad from the 
\emph on
outside
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
EitherT
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
WriterT
\family default
\size default
\color inherit
 must be composed 
\emph on
inside
\emph default
 the foreign monad
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset


\size default
Remaining questions:
\end_layout

\begin_layout Itemize
What are transformers for other standard monads (
\family typewriter
\size footnotesize
\color blue
List
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
State
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Cont
\family default
\size default
\color inherit
)?
\end_layout

\begin_deeper
\begin_layout Itemize
These monads do not compose (neither 
\begin_inset Quotes eld
\end_inset

inside
\begin_inset Quotes erd
\end_inset

 nor 
\begin_inset Quotes eld
\end_inset

outside
\begin_inset Quotes erd
\end_inset

 works)!
\end_layout

\end_deeper
\begin_layout Itemize
How to derive a monad transformer for an arbitrary given monad?
\end_layout

\begin_deeper
\begin_layout Itemize
For monads obtained via known monad constructions?
\end_layout

\begin_layout Itemize
For monads constructed via other monad transformers? (Stack them.)
\end_layout

\begin_layout Itemize
Is it always possible? (No known counterexamples.)
\end_layout

\end_deeper
\begin_layout Itemize
Is a given monad's transformer unique? (No.)
\end_layout

\begin_layout Itemize
How to avoid the boilerplate around 
\family typewriter
\size footnotesize
\color blue
lift
\family default
\size default
\color inherit
? (
\family typewriter
\size footnotesize
\color blue
mtl
\family default
\size default
\color inherit
-style transformers)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Monad transformers IV: The zoology of 
\emph on
ad hoc
\emph default
 methods
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset


\size default
Need to choose the correct monad transformer construction, per monad:
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Composed-inside
\begin_inset Quotes erd
\end_inset

, base monad is inside foreign monad: 
\begin_inset Formula $T_{L}^{M,A}=M^{L^{A}}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Examples: the 
\series bold
linear
\series default
 monads 
\family typewriter
\size footnotesize
\color blue
OptionT
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
WriterT
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
EitherT
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Composed-outside
\begin_inset Quotes erd
\end_inset

 – the base monad is outside: 
\begin_inset Formula $T_{L}^{M,A}=L^{M^{A}}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Examples: 
\family typewriter
\size footnotesize
\color blue
ReaderT
\family default
\size default
\color inherit
; 
\family typewriter
\size footnotesize
\color blue
SearchT
\family default
\size default
\color inherit
 for search monad 
\family typewriter
\size footnotesize
\color blue
S[A] = (A 
\begin_inset Formula $\Rightarrow$
\end_inset

 Z) 
\begin_inset Formula $\Rightarrow$
\end_inset

 A
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
More generally: all 
\series bold
rigid
\series default
 monads have 
\begin_inset Quotes eld
\end_inset

outside
\begin_inset Quotes erd
\end_inset

 transformers
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Recursive
\begin_inset Quotes erd
\end_inset

: interleaves the base monad and the foreign monad
\end_layout

\begin_deeper
\begin_layout Itemize
Examples: 
\family typewriter
\size footnotesize
\color blue
ListT
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
NonEmptyListT
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
FreeMonadT
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Itemize
Monad constructions: defining a transformer for new monads
\end_layout

\begin_deeper
\begin_layout Itemize
Product monads 
\begin_inset Formula $L_{1}^{A}\times L_{2}^{A}$
\end_inset

 – product transformer 
\begin_inset Formula $T_{L_{1}}^{M,A}\times T_{L_{2}}^{M,A}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Contrafunctor-choice
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $H^{A}\Rightarrow A$
\end_inset

 – composed-outside transformer
\end_layout

\begin_layout Itemize
Free pointed monads 
\begin_inset Formula $A+L^{A}$
\end_inset

 – transformer 
\begin_inset Formula $M^{A+T_{L}^{M,A}}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Irregular
\begin_inset Quotes erd
\end_inset

: none of the above constructions work, need something else
\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset Formula $T_{\text{State}}^{M,A}=S\Rightarrow M^{S\times A}$
\end_inset


\size default
; 
\size footnotesize

\begin_inset Formula $T_{\text{Cont}}^{M,A}=\left(A\Rightarrow M^{R}\right)\Rightarrow M^{R}$
\end_inset


\size default
; 
\begin_inset Quotes eld
\end_inset

selector
\begin_inset Quotes erd
\end_inset

 
\size footnotesize

\begin_inset Formula $F^{A\Rightarrow P^{Q}}\Rightarrow P^{A}$
\end_inset


\size default
 – transformer 
\begin_inset Formula $F^{A\Rightarrow T_{P}^{M,Q}}\Rightarrow T_{P}^{M,A}$
\end_inset

; codensity 
\size footnotesize

\begin_inset Formula $\forall R.\left(A\Rightarrow M^{R}\right)\Rightarrow M^{R}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Examples of monads 
\begin_inset Formula $K^{A}$
\end_inset

 for which no transformers exist? (not known)
\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.4cm}
\end_layout

\end_inset


\size default

\begin_inset Formula $T_{\text{Cod}}$
\end_inset

, 
\begin_inset Formula $T_{\text{Sel}}$
\end_inset

, and 
\begin_inset Formula $T_{\text{Cont}}$
\end_inset

 transformers have no 
\family typewriter
\size footnotesize
\color blue
blift
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
brun
\family default
\size default
\color inherit
, or 
\family typewriter
\size footnotesize
\color blue
mrun
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Composed-inside transformers I
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Base monad 
\begin_inset Formula $L^{\bullet}$
\end_inset

, foreign monad 
\begin_inset Formula $M^{\bullet}$
\end_inset

, transformer 
\begin_inset Formula $T_{L}^{M,\bullet}\triangleq T^{\bullet}\triangleq M^{L^{\bullet}}$
\end_inset


\end_layout

\begin_layout Itemize
Monad instance: use the natural transformation 
\begin_inset Formula $\text{sw}^{A}:L^{M^{A}}\Rightarrow M^{L^{A}}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\text{pure}_{T}:A\Rightarrow M^{L^{A}}$
\end_inset

 is defined as 
\begin_inset Formula $\text{pure}_{T}=\text{pure}_{M}\bef\text{pure}_{L}^{\uparrow M}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\text{ftn}_{T}:T^{T^{A}}\Rightarrow T^{A}$
\end_inset

 is defined as 
\begin_inset Formula $\text{ftn}_{T}=\text{sw}^{\uparrow M}\bef\text{ftn}_{L}^{\uparrow M\uparrow M}\bef\text{ftn}_{M}$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\size footnotesize
\begin_inset Formula 
\[
\xymatrix{\xyScaleY{2pc}\xyScaleX{5pc}T^{T^{A}}\triangleq M^{L^{M^{L^{A}}}}\ar[r]\sb(0.5){\text{fmap}_{M}\big(\text{sw}^{L^{A}}\big)} & M^{M^{L^{L^{A}}}}\ar[r]\sb(0.5){\text{fmap}_{M}(\text{fmap}_{M}\text{ftn}_{L})} & M^{M^{L^{A}}}\ar[r]\sb(0.5){\text{ftn}_{M}} & M^{L^{A}}\triangleq T^{A}}
\]

\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.15cm}
\end_layout

\end_inset


\size default
Monad laws must hold for 
\begin_inset Formula $T^{A}$
\end_inset

 (must check this separately)
\end_layout

\begin_deeper
\begin_layout Itemize
This depends on special properties of 
\size footnotesize

\begin_inset Formula $\text{sw}$
\end_inset


\size default
, e.g.
\begin_inset space ~
\end_inset


\begin_inset Formula $\text{pure}_{L}\bef\text{sw}=\text{pure}_{L}^{\uparrow M}$
\end_inset

 (
\begin_inset Formula $L$
\end_inset

-identity); 
\begin_inset Formula $\text{pure}_{M}^{\uparrow L}\bef\text{sw}=\text{pure}_{M}$
\end_inset

 (
\begin_inset Formula $M$
\end_inset

-identity) and other laws
\end_layout

\begin_deeper
\begin_layout Itemize
See example code that verifies these laws for 
\begin_inset Formula $L^{A}\triangleq E+W\times A$
\end_inset


\end_layout

\begin_layout Itemize
It is not enough to have 
\emph on
any
\emph default
 traversable functor 
\begin_inset Formula $L^{\bullet}$
\end_inset

 here!
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Monad transformer methods for 
\begin_inset Formula $T_{L}^{M,\bullet}\triangleq M^{L^{\bullet}}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
Lifting, 
\begin_inset Formula $\text{lift}:M^{A}\Rightarrow M^{L^{A}}$
\end_inset

 is equal to 
\begin_inset Formula $\text{pure}_{L}^{\uparrow M}$
\end_inset


\end_layout

\begin_layout Itemize
Base lifting, 
\begin_inset Formula $\text{blift}:L^{A}\Rightarrow M^{L^{A}}$
\end_inset

 is equal to 
\begin_inset Formula $\text{pure}_{M}$
\end_inset


\end_layout

\begin_layout Itemize
Runner, 
\begin_inset Formula $\text{mrun}:\left(\forall B.M^{B}\Rightarrow N^{B}\right)\Rightarrow M^{L^{A}}\Rightarrow N^{L^{A}}$
\end_inset

 is equal to 
\begin_inset Formula $\text{id}$
\end_inset


\end_layout

\begin_layout Itemize
Base runner, 
\begin_inset Formula $\text{brun}:\left(\forall B.L^{B}\Rightarrow B\right)\Rightarrow M^{L^{A}}\Rightarrow M^{A}$
\end_inset

 is equal to 
\begin_inset Formula $\text{fmap}_{M}$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Composed-inside transformers II.
 Proofs of lifting laws
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.15cm}
\end_layout

\end_inset


\size default
Base monad 
\begin_inset Formula $L^{\bullet}$
\end_inset

, foreign monad 
\begin_inset Formula $M^{\bullet}$
\end_inset

, transformer 
\begin_inset Formula $T_{L}^{M,\bullet}=T^{\bullet}\triangleq M^{L^{\bullet}}$
\end_inset


\end_layout

\begin_layout Itemize
Identity laws for the monad 
\begin_inset Formula $T^{\bullet}$
\end_inset

 hold if they hold for 
\begin_inset Formula $L^{\bullet}$
\end_inset

 and 
\begin_inset Formula $M^{\bullet}$
\end_inset

 and if the properties 
\begin_inset Formula $\text{pure}_{L}\bef\text{sw}=\text{pure}_{L}^{\uparrow M}$
\end_inset

 and 
\begin_inset Formula $\text{pure}_{M}^{\uparrow L}\bef\text{sw}=\text{pure}_{M}$
\end_inset

 hold
\end_layout

\begin_layout Itemize
\begin_inset Formula $\text{pure}_{T}\bef\text{ftn}_{T}=\text{id}$
\end_inset

.
 
\size footnotesize
Proof: 
\begin_inset Formula $\big(\text{pure}_{M}\bef\text{pure}_{L}^{\uparrow M}\big)\bef\big(\text{sw}^{\uparrow M}\bef\text{ftn}_{L}^{\uparrow M\uparrow M}\bef\text{ftn}_{M}\big)=\text{pure}_{M}\bef\left(\text{pure}_{L}\bef\text{sw}\right)^{\uparrow M}\bef\text{ftn}_{L}^{\uparrow M\uparrow M}\bef\text{ftn}_{M}=\text{pure}_{M}\bef\text{pure}_{L}^{\uparrow M\uparrow M}\bef\text{ftn}_{L}^{\uparrow M\uparrow M}\bef\text{ftn}_{M}=\text{id}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\text{pure}_{T}^{\uparrow T}\bef\text{ftn}_{T}=\text{id}$
\end_inset

.
 
\size footnotesize
Proof: 
\begin_inset Formula $\text{pure}_{T}=\text{pure}_{M}\bef\text{pure}_{L}^{\uparrow M}=\text{pure}_{L}\bef\text{pure}_{M}$
\end_inset

 (naturality); for all 
\begin_inset Formula $f$
\end_inset

: 
\begin_inset Formula $f^{\uparrow T}=f^{\uparrow L\uparrow M}$
\end_inset

 and 
\begin_inset Formula $f\bef\text{pure}_{M}=\text{pure}_{M}\bef f^{\uparrow M}$
\end_inset

 (naturality); so 
\begin_inset Formula $\text{pure}_{T}^{\uparrow T}\bef\text{ftn}_{T}$
\end_inset

 is 
\begin_inset Formula $\left(\text{pure}_{L}\bef\text{pure}_{M}\right)^{\uparrow L\uparrow M}\bef\big(\text{sw}^{\uparrow M}\bef\text{ftn}_{L}^{\uparrow M\uparrow M}\bef\text{ftn}_{M}\big)=\text{pure}_{L}^{\uparrow L\uparrow M}\bef\text{pure}_{M}^{\uparrow M}\bef\text{ftn}_{L}^{\uparrow M\uparrow M}\bef\text{ftn}_{M}=\text{pure}_{M}^{\uparrow M}\bef\big(\text{pure}_{L}^{\uparrow L}\bef\text{ftn}_{L}\big)^{\uparrow M\uparrow M}\bef\text{ftn}_{M}=\text{id}$
\end_inset

 where we used naturality with 
\begin_inset Formula $f=\text{pure}_{L}^{\uparrow L}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\text{lift}$
\end_inset

's identity law: 
\begin_inset Formula $\text{pure}_{M}\bef\text{lift}=\text{pure}_{T}$
\end_inset

 
\size footnotesize
(this 
\emph on
is
\emph default
 the definition of 
\begin_inset Formula $\text{pure}_{T}$
\end_inset

)
\end_layout

\begin_layout Itemize
Composition law: 
\begin_inset Formula $\text{lift}\bef\text{lift}^{\uparrow T}\bef\text{ftn}_{T}=\text{ftn}_{M}\bef\text{lift}$
\end_inset

.
 
\size footnotesize
Proof: 
\begin_inset Formula $\text{ftn}_{M}\bef\text{pure}_{L}^{\uparrow M}=\text{pure}_{L}^{\uparrow M\uparrow M}\bef\text{ftn}_{M}$
\end_inset

 and 
\begin_inset Formula $\text{pure}_{L}^{\uparrow M}\bef\big(\text{pure}_{L}^{\uparrow M\uparrow L\uparrow M}\bef\text{sw}^{\uparrow M}\big)\bef\text{ftn}_{L}^{\uparrow M\uparrow M}\bef\text{ftn}_{M}=\big(\text{pure}_{L}^{\uparrow M}\bef\text{sw}^{\uparrow M}\big)\bef\big(\text{pure}_{L}^{\uparrow L\uparrow M\uparrow M}\bef\text{ftn}_{L}^{\uparrow M\uparrow M}\big)\bef\text{ftn}_{M}=\text{pure}_{L}^{\uparrow M\uparrow M}\bef\text{ftn}_{M}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\text{blift}$
\end_inset

's identity law: 
\begin_inset Formula $\text{pure}_{L}\bef\text{blift}=\text{pure}_{T}$
\end_inset

.

\size footnotesize
 
\begin_inset space ~
\end_inset

 (
\begin_inset Formula $\text{pure}_{L}\bef\text{pure}_{M}=\text{pure}_{M}\bef\text{pure}_{L}^{\uparrow M}$
\end_inset

)
\end_layout

\begin_layout Itemize
Composition law: 
\begin_inset Formula $\text{blift}\bef\text{blift}^{\uparrow T}\bef\text{ftn}_{T}=\text{ftn}_{L}\bef\text{blift}$
\end_inset

.
 
\size footnotesize
Proof: 
\begin_inset Formula $\text{pure}_{M}\bef\text{pure}_{M}^{\uparrow L\uparrow M}\bef\big(\text{sw}^{\uparrow M}\bef\text{ftn}_{L}^{\uparrow M\uparrow M}\bef\text{ftn}_{M}\big)=\text{pure}_{M}\bef\big(\text{pure}_{M}^{\uparrow M}\bef\text{ftn}_{L}^{\uparrow M\uparrow M}\big)\bef\text{ftn}_{M}=\text{pure}_{M}\bef\big(\text{ftn}_{L}^{\uparrow M}\bef\text{pure}_{M}^{\uparrow M}\big)\bef\text{ftn}_{M}=\text{ftn}_{L}\bef\text{pure}_{M}\bef\big(\text{pure}_{M}^{\uparrow M}\bef\text{ftn}_{M}\big)=\text{ftn}_{L}\bef\text{blift}$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Composed-inside transformers III.
 Proofs of runner laws
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.15cm}
\end_layout

\end_inset


\size default
Given a monadic morphism 
\begin_inset Formula $\phi:M^{\bullet}\leadsto N^{\bullet}$
\end_inset

, we need to show that 
\begin_inset Formula $\text{mrun}\,\phi\triangleq\phi:M^{L^{\bullet}}\leadsto N^{L^{\bullet}}$
\end_inset

 is also a monadic morphism
\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset Formula $\phi$
\end_inset

's laws are 
\begin_inset Formula $\text{pure}_{M}\bef\phi=\text{pure}_{N}$
\end_inset

 and 
\begin_inset Formula $\text{ftn}_{M}\bef\phi=\phi^{\uparrow M}\bef\phi\bef\text{ftn}_{N}$
\end_inset

 and 
\begin_inset Formula $f^{\uparrow M}\bef\phi=\phi\bef f^{\uparrow N}$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
Identity law: 
\begin_inset Formula $\text{pure}_{L}\bef\text{pure}_{M}\bef\phi=\text{pure}_{L}\bef\text{pure}_{N}$
\end_inset

 – follows from 
\begin_inset Formula $\phi$
\end_inset

's law
\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset

Composition law: 
\begin_inset Formula $\text{ftn}_{M^{L}}\bef\phi=\phi^{\uparrow L\uparrow M}\bef\phi\bef\text{ftn}_{N^{L}}$
\end_inset

 as functions 
\begin_inset Formula $T^{T^{\bullet}}\Rightarrow N^{L^{\bullet}}$
\end_inset

.
 Proof: By def.
\begin_inset space ~
\end_inset

of 
\begin_inset Formula $\text{ftn}_{M^{L}}$
\end_inset

 and 
\begin_inset Formula $\text{ftn}_{N^{L}}$
\end_inset

 and by the composition and naturality laws for 
\begin_inset Formula $\phi$
\end_inset

, get 
\begin_inset Formula $\text{sw}^{\uparrow M}\bef\text{ftn}_{L}^{\uparrow M\uparrow M}\bef\left(\text{ftn}_{M}\bef\phi\right)=\text{sw}^{\uparrow M}\bef\big(\text{ftn}_{L}^{\uparrow M\uparrow M}\bef\phi^{\uparrow M}\big)\bef\phi\bef\text{ftn}_{N}=$
\end_inset

 
\begin_inset Formula $\text{sw}^{\uparrow M}\bef\phi^{\uparrow M}\bef\text{ftn}_{L}^{\uparrow N\uparrow M}\bef\phi\bef\text{ftn}_{N}=\big(\text{sw}\bef\phi\big)^{\uparrow M}\bef\big(\text{ftn}_{L}^{\uparrow N\uparrow M}\bef\phi\big)\bef\text{ftn}_{N}$
\end_inset

.
 The 
\begin_inset Formula $M$
\end_inset


\series bold
-naturality
\series default
 of 
\begin_inset Formula $\text{sw}$
\end_inset

 means that 
\begin_inset Formula $\text{sw}\bef\phi=\phi^{\uparrow L}\bef\text{sw}$
\end_inset

, so we get 
\begin_inset Formula $\phi^{\uparrow L\uparrow M}\bef\big(\text{sw}^{\uparrow M}\bef\phi\big)\bef\text{ftn}_{L}^{\uparrow N\uparrow N}\bef\text{ftn}_{N}=\phi^{\uparrow L\uparrow M}\bef\phi\bef\big(\text{sw}^{\uparrow N}\bef\text{ftn}_{L}^{\uparrow N\uparrow N}\bef\text{ftn}_{N}\big)=\phi^{\uparrow L\uparrow M}\bef\phi\bef\text{ftn}_{N^{L}}$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset


\size default
Given a monadic morphism 
\begin_inset Formula $\phi:L^{A}\leadsto A$
\end_inset

, we need to show that 
\begin_inset Formula $\text{brun}\,\phi\triangleq\phi^{\uparrow M}:M^{L^{A}}\Rightarrow M^{A}$
\end_inset

 is also a monadic morphism
\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset Formula $\phi$
\end_inset

's laws are 
\begin_inset Formula $\text{pure}_{L}\bef\phi=\text{id}$
\end_inset

 and 
\begin_inset Formula $\text{ftn}_{L}\bef\phi=\phi\bef\phi$
\end_inset

 and 
\begin_inset Formula $f^{\uparrow L}\bef\phi=\phi\bef f$
\end_inset

; also 
\begin_inset Formula $\text{sw}\bef\phi^{\uparrow M}=\phi$
\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
Identity law: 
\begin_inset Formula $\text{pure}_{T}\bef\phi^{\uparrow M}=\text{pure}_{L}\bef\big(\text{pure}_{M}\bef\phi^{\uparrow M}\big)=\left(\text{pure}_{L}\bef\phi\right)\bef\text{pure}_{M}=\text{pure}_{M}$
\end_inset

 
\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset

Composition law: 
\begin_inset Formula $\text{ftn}_{M^{L}}\bef\phi^{\uparrow M}=\phi^{\uparrow M}\bef\phi^{\uparrow M\uparrow M}\bef\text{ftn}_{M}$
\end_inset

 as functions 
\begin_inset Formula $T^{T^{\bullet}}\Rightarrow M^{\bullet}$
\end_inset

.
 Proof: 
\begin_inset Formula $\text{sw}^{\uparrow M}\bef\big(\text{ftn}_{L}^{\uparrow M\uparrow M}\bef\text{ftn}_{M}\big)\bef\phi^{\uparrow M}=\text{sw}^{\uparrow M}\bef\text{ftn}_{M}\bef\big(\text{ftn}_{L}\bef\phi\big)^{\uparrow M}=$
\end_inset

 
\begin_inset Formula $\text{sw}^{\uparrow M}\bef\big(\text{ftn}_{M}\bef\phi^{\uparrow M}\big)\bef\phi^{\uparrow M}=\big(\text{sw}^{\uparrow M}\bef\phi^{\uparrow M\uparrow M}\big)\bef\big(\text{ftn}_{M}\bef\phi^{\uparrow M}\big)=\phi^{\uparrow M}\bef\phi^{\uparrow M\uparrow M}\bef\text{ftn}_{M}$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Rigid monads I: Definitions
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset


\size default
A 
\series bold
rigid monad
\series default
 
\begin_inset Formula $R^{\bullet}$
\end_inset

 has a composed-outside transformer, 
\begin_inset Formula $T_{R}^{M,A}\triangleq R^{M^{A}}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.25cm}
\end_layout

\end_inset


\size default
Examples: 
\begin_inset Formula $R^{A}\triangleq A\times A$
\end_inset

 and 
\begin_inset Formula $R^{A}\triangleq Z\Rightarrow A$
\end_inset

 are rigid; 
\begin_inset Formula $R^{A}\triangleq1+A$
\end_inset

 is not
\end_layout

\begin_layout Itemize
For any monad 
\begin_inset Formula $M$
\end_inset

, we then have 
\begin_inset Formula $\text{sw}:M^{R^{A}}\Rightarrow R^{M^{A}}$
\end_inset

 defined by
\size footnotesize

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset


\size default

\begin_inset Formula 
\[
\text{sw}=\text{pure}_{M}^{\uparrow R\uparrow M}\bef\text{pure}_{R}\bef\text{ftn}_{T}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset


\begin_inset Formula 
\[
\xymatrix{\xyScaleY{2pc}\xyScaleX{4pc}M^{R^{A}}\ar[r]\sb(0.5){\text{fmap}_{M}\left(\text{fmap}_{R}\left(\text{pure}_{M}\right)\right)} & M^{R^{M^{A}}}\ar[r]\sb(0.4){\text{pure}_{R}} & R^{M^{R^{M^{A}}}}=T^{T^{A}}\ar[r]\sb(0.5){\text{ftn}_{T}} & T^{A}\triangleq R^{M^{A}}}
\]

\end_inset


\end_layout

\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset


\size default
Is 
\begin_inset Formula $\text{ftn}_{T}$
\end_inset

 definable via 
\begin_inset Formula $\text{sw}$
\end_inset

 with some additional laws? (Yes.)
\end_layout

\begin_layout Standard
Examples and constructions of rigid monads:
\end_layout

\begin_layout Itemize
Rigid: 
\family typewriter
\size footnotesize
\color blue
Id
\family default
\size default
\color inherit
, 
\family typewriter
\size footnotesize
\color blue
Reader
\family default
\size default
\color inherit
, and 
\begin_inset Formula $R^{A}\triangleq H^{A}\Rightarrow A$
\end_inset

 (where 
\begin_inset Formula $H$
\end_inset

 is a contrafunctor)
\end_layout

\begin_deeper
\begin_layout Itemize
The construction 
\begin_inset Formula $R^{A}\triangleq H^{A}\Rightarrow A$
\end_inset

 covers 
\begin_inset Formula $R^{A}\triangleq1$
\end_inset

, 
\begin_inset Formula $R^{A}\triangleq A$
\end_inset

, 
\begin_inset Formula $R^{A}\triangleq Z\Rightarrow A$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The 
\series bold
selector monad
\series default
 
\begin_inset Formula $S^{A}\triangleq F^{A\Rightarrow R^{Q}}\Rightarrow R^{A}$
\end_inset

 is rigid if 
\begin_inset Formula $R^{\bullet}$
\end_inset

 is rigid
\end_layout

\begin_deeper
\begin_layout Itemize
Simple example: search with failure, 
\begin_inset Formula $S^{A}\triangleq\left(A\Rightarrow\text{Bool}\right)\Rightarrow1+A$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The composition of rigid monads, 
\begin_inset Formula $R_{1}^{R_{2}^{A}}$
\end_inset

, is a rigid monad
\end_layout

\begin_layout Itemize
The product of rigid monads, 
\begin_inset Formula $R_{1}^{A}\times R_{2}^{A}$
\end_inset

, is a rigid monad
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Rigid functors, their laws and structure I
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset


\size default
A 
\series bold
rigid functor
\series default
 
\begin_inset Formula $R^{\bullet}$
\end_inset

 has the method 
\family typewriter
\size footnotesize
\color blue
fuseIn
\family default
\size default
\color inherit

\begin_inset Formula $:\left(A\Rightarrow R^{B}\right)\Rightarrow R^{A\Rightarrow B}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Rigid monads are rigid functors since 
\family typewriter
\size footnotesize
\color blue
fi 
\family default
\size default
\color inherit

\begin_inset Formula $=\text{sw}$
\end_inset

 with 
\begin_inset Formula $M^{A}\triangleq Z\Rightarrow A$
\end_inset


\end_layout

\begin_layout Itemize
Compare with 
\family typewriter
\size footnotesize
\color blue
fuseOut
\family default
\size default
\color inherit

\begin_inset Formula $:R^{A\Rightarrow B}\Rightarrow A\Rightarrow R^{B}$
\end_inset

, which exists for 
\emph on
any
\emph default
 functor
\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.3cm}
\end_layout

\end_inset


\size default
Implementation: 
\family typewriter
\size footnotesize
\color blue
fo
\family default
\size default
\color inherit
 
\begin_inset Formula $h^{:R^{A\Rightarrow B}}=x^{:A}\Rightarrow\left(f^{:A\Rightarrow B}\Rightarrow f\,x\right)^{\uparrow R}h$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.05cm}
\end_layout

\end_inset


\size default
Nondegeneracy law: 
\family typewriter
\size footnotesize
\color blue
fuseOut(fuseIn(x)) == x
\family default
\size default
\color inherit
 or 
\begin_inset Formula $\text{fi}\bef\text{fo}=\text{id}$
\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
\begin_inset Formula $\text{fi}$
\end_inset


\family default
\size default
\color inherit
 must be natural in both type parameters
\end_layout

\begin_deeper
\begin_layout Itemize
Naturality: 
\begin_inset Formula $\text{fi}\left(f\bef g^{\uparrow R}\right)=\left(q^{:A\Rightarrow B}\Rightarrow q\bef g\right)^{\uparrow R}\left(\text{fi}\,f\right)$
\end_inset

 for 
\begin_inset Formula $\forall$
\end_inset

 
\begin_inset Formula $f^{:A\Rightarrow R^{B}}$
\end_inset

, 
\begin_inset Formula $g^{:B\Rightarrow C}$
\end_inset

 and 
\begin_inset Formula $\text{fi}\left(f\bef g\right)=\left(q^{:B\Rightarrow C}\Rightarrow f\bef q\right)^{\uparrow R}\left(\text{fi}\,g\right)$
\end_inset

 for 
\begin_inset Formula $\forall$
\end_inset

 
\begin_inset Formula $f^{:A\Rightarrow B}$
\end_inset

, 
\begin_inset Formula $g^{:B\Rightarrow R^{C}}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize

\size small
Connection between monadic 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 and applicative 
\family typewriter
\size footnotesize
\color blue
ap
\family default
\size default
\color inherit
 for monadic 
\begin_inset Formula $R$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset Formula $\text{flm}:\left(A\Rightarrow R^{B}\right)\Rightarrow R^{A}\Rightarrow R^{B}$
\end_inset


\end_layout

\begin_layout Itemize

\size small
\begin_inset Formula $\text{ap}:R^{A\Rightarrow B}\Rightarrow R^{A}\Rightarrow R^{B}$
\end_inset


\end_layout

\begin_layout Itemize
The connection is 
\size small

\begin_inset Formula $\text{flm}=\text{fi}\bef\text{ap}$
\end_inset


\size default
 and 
\size small

\begin_inset Formula $\text{ap}=\text{fo}\bef\text{flm}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
However, here we need to flip the order of 
\begin_inset Formula $R$
\end_inset

-effects in 
\family typewriter
\size footnotesize
\color blue
ap
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Itemize
Connection between 
\begin_inset Formula $\text{ap}$
\end_inset

 and 
\begin_inset Formula $\text{fo}$
\end_inset

 is 
\begin_inset Formula $\text{fo}\,x\,a=\text{ap}\,x\,\left(\text{pure}\,a\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
If 
\size small

\begin_inset Formula $\text{flm}=\text{fi}\bef\text{ap}$
\end_inset


\size default
 then 
\begin_inset Formula $\text{fi}\bef\text{fo}=\text{id}$
\end_inset

.
 Proof: set 
\begin_inset Formula $x^{:R^{A\Rightarrow B}}=\text{fi}\,h^{:A\Rightarrow R^{B}}$
\end_inset

 and get 
\begin_inset Formula $\text{fo}\,x\,a=\text{ap}\,\left(\text{fi}\,h\right)\left(\text{pure}\,a\right)=\text{flm}\,h\left(\text{pure}\,a\right)=h\,a$
\end_inset

, so 
\begin_inset Formula $\text{fo}\left(\text{fi}\,h\right)=h$
\end_inset

 
\end_layout

\begin_layout Itemize
Conversely: Assuming 
\begin_inset Formula $\text{fi}\bef\text{fo}=\text{id}$
\end_inset

 and 
\size small

\begin_inset Formula $\text{ap}=\text{fo}\bef\text{flm}$
\end_inset


\size default
 then 
\size small

\begin_inset Formula $\text{flm}=\text{fi}\bef\text{ap}$
\end_inset

.
\begin_inset Newline newline
\end_inset

 Proof: 
\begin_inset Formula $\text{fi}\bef\text{ap}=\text{fi}\bef\text{fo}\bef\text{flm}=\text{flm}$
\end_inset


\size default
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Rigid functors, their laws and structure II
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Examples and constructions of rigid functors (see code):
\end_layout

\begin_layout Itemize
\begin_inset Formula $R^{A}\triangleq H^{A}\Rightarrow Q^{A}$
\end_inset

 is a rigid functor (not monad) if 
\begin_inset Formula $Q^{A}$
\end_inset

 is a rigid functor
\end_layout

\begin_deeper
\begin_layout Itemize
Not rigid: 
\begin_inset Formula $R^{A}\triangleq W\times A$
\end_inset

, 
\begin_inset Formula $R^{A}\triangleq E+A$
\end_inset

, 
\begin_inset Formula $\text{List}^{A}$
\end_inset

, 
\begin_inset Formula $\text{Cont}^{A}$
\end_inset

, 
\begin_inset Formula $\text{State}^{A}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Products and compositions of rigid functors are rigid
\end_layout

\begin_layout Standard
Use cases for rigid functors:
\end_layout

\begin_layout Itemize
A rigid functor has a 
\emph on
single constructor
\emph default
 because 
\begin_inset Formula $R^{1}\cong1$
\end_inset


\end_layout

\begin_layout Itemize
A rigid functor is pointed: a natural transformation 
\begin_inset Formula $A\Rightarrow R^{A}$
\end_inset

 exists
\end_layout

\begin_layout Itemize
Can handle multiple 
\begin_inset Formula $M^{\bullet}$
\end_inset

 effects at once: For a rigid functor 
\begin_inset Formula $R^{\bullet}$
\end_inset

 and any monad 
\begin_inset Formula $M^{\bullet}$
\end_inset

, have 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $R$
\end_inset

-valued 
\begin_inset Formula $M$
\end_inset

-
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit

\begin_inset Quotes erd
\end_inset

: 
\begin_inset Formula $M^{A}\times\big(A\Rightarrow R^{M^{B}}\big)\Rightarrow R^{M^{B}}$
\end_inset


\end_layout

\begin_layout Itemize
Uptake monadic API: For a rigid functor 
\begin_inset Formula $R^{\bullet}$
\end_inset

, can implement a general refactoring function, 
\family typewriter
\size footnotesize
\color blue
refactor
\family default
\size default
\color inherit

\begin_inset Formula $:\left(\left(A\Rightarrow B\right)\Rightarrow C\right)\Rightarrow\left(A\Rightarrow R^{B}\right)\Rightarrow R^{C}$
\end_inset

, to transform a program 
\begin_inset Formula $p\left(f^{:A\Rightarrow B}\right):C$
\end_inset

 into 
\begin_inset Formula $\tilde{p}\,\big(\tilde{f}^{:A\Rightarrow R^{B}}\big):R^{C}$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Rigid monads II: Composed-outside transformers
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Base rigid monad 
\begin_inset Formula $R^{\bullet}$
\end_inset

, foreign monad 
\begin_inset Formula $M^{\bullet}$
\end_inset

, transformer 
\size footnotesize

\begin_inset Formula $T_{R}^{M,\bullet}\triangleq T^{\bullet}\triangleq R^{M^{\bullet}}$
\end_inset


\end_layout

\begin_layout Itemize
Monad instance: define the Kleisli category with morphisms 
\begin_inset Formula $A\Rightarrow R^{M^{A}}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\text{pure}_{T}:A\Rightarrow R^{M^{A}}$
\end_inset

 is defined by 
\size footnotesize

\begin_inset Formula $\text{pure}_{T}\triangleq\text{pure}_{M}\bef\text{pure}_{R}=\text{pure}_{R}\bef\text{pure}_{M}^{\uparrow R}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\text{ftn}_{T}:T^{T^{A}}\Rightarrow T^{A}$
\end_inset

 must be defined case by case for each construction
\end_layout

\begin_deeper
\begin_layout Itemize
If 
\begin_inset Formula $R^{M^{\bullet}}$
\end_inset

 is a monad then we can define 
\begin_inset Formula $\text{sw}:M^{R^{\bullet}}\leadsto R^{M^{\bullet}}$
\end_inset


\end_layout

\begin_layout Itemize
Choosing 
\begin_inset Formula $M^{A}\triangleq Z\Rightarrow A$
\end_inset

, we get 
\begin_inset Formula $\text{sw}=\text{fi}:\left(Z\Rightarrow R^{A}\right)\Rightarrow R^{Z\Rightarrow A}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Open question: Is a rigid monad always a rigid functor?
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
Define 
\series bold
rigid monads
\series default
 via the existence of composed-outside transformers
\end_layout

\begin_layout Itemize
Monad transformer methods for 
\begin_inset Formula $T_{R}^{M,\bullet}\triangleq R^{M^{\bullet}}$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
Lifting, 
\begin_inset Formula $\text{lift}:M^{A}\Rightarrow R^{M^{A}}$
\end_inset

 is equal to 
\begin_inset Formula $\text{pure}_{M}$
\end_inset


\end_layout

\begin_layout Itemize
Base lifting, 
\begin_inset Formula $\text{blift}:R^{A}\Rightarrow R^{M^{A}}$
\end_inset

 is equal to 
\begin_inset Formula $\text{pure}_{M}^{\uparrow R}$
\end_inset


\end_layout

\begin_layout Itemize
Runner, 
\begin_inset Formula $\text{mrun}:\left(\forall B.M^{B}\Rightarrow N^{B}\right)\Rightarrow R^{M^{A}}\Rightarrow R^{N^{A}}$
\end_inset

 is equal to 
\begin_inset Formula $\text{fmap}_{R}$
\end_inset


\end_layout

\begin_layout Itemize
Base runner, 
\begin_inset Formula $\text{brun}:\left(\forall B.R^{B}\Rightarrow B\right)\Rightarrow R^{M^{A}}\Rightarrow M^{A}$
\end_inset

 is equal to 
\begin_inset Formula $\text{id}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Checking the monad transformer laws, case by case
\end_layout

\begin_deeper
\begin_layout Itemize
The laws hold for 
\begin_inset Formula $R^{A}\triangleq H^{A}\Rightarrow A$
\end_inset

 and 
\begin_inset Formula $R^{A}\triangleq F^{A\Rightarrow P^{Q}}\Rightarrow P^{A}$
\end_inset


\end_layout

\begin_layout Itemize
The laws hold for composition and product of rigid monads
\end_layout

\begin_deeper
\begin_layout Itemize
Any other constructions or examples? (Not known.)
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Rigid monads III: Some tricks for proving the laws
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset


\size default
Some monads involve a higher-order function, e.g.:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $R^{A}\triangleq H^{A}\Rightarrow A$
\end_inset

,
\begin_inset space ~
\end_inset

 
\begin_inset Formula $R^{A}\triangleq\left(A\Rightarrow P^{Q}\right)\Rightarrow P^{A}$
\end_inset

,
\begin_inset space ~
\end_inset

 
\begin_inset Formula $R^{A}\triangleq\forall B.\left(A\Rightarrow F^{B}\right)\Rightarrow F^{B}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Proving laws for these monads is easier with these tricks:
\end_layout

\begin_deeper
\begin_layout Enumerate
Instead of defining 
\begin_inset Formula $\text{flm}_{R}$
\end_inset

 or 
\begin_inset Formula $\text{ftn}_{R}$
\end_inset

 directly, use the Kleisli functions and 
\begin_inset Formula $\diamond_{R}$
\end_inset


\size footnotesize

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset


\size default

\begin_inset Formula 
\[
f^{:A\Rightarrow R^{B}}\diamond_{R}g^{:B\Rightarrow R^{C}}:A\Rightarrow R^{C}
\]

\end_inset


\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset


\size default
\emph on
Flip
\emph default
 
\emph on
the
\emph default
 
\emph on
arguments
\emph default
 of the Kleisli functions: for example, instead of 
\begin_inset Formula $A\Rightarrow R^{B}\triangleq A\Rightarrow\left(B\Rightarrow P^{Q}\right)\Rightarrow P^{B}$
\end_inset

, work with 
\begin_inset Formula $\left(B\Rightarrow P^{Q}\right)\Rightarrow A\Rightarrow P^{B}$
\end_inset


\end_layout

\begin_layout Enumerate
Use the Kleisli product for the nested monad: for example, to define
\size footnotesize

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.0cm}
\end_layout

\end_inset


\size default

\begin_inset Formula 
\[
f^{:\left(B\Rightarrow P^{Q}\right)\Rightarrow A\Rightarrow P^{B}}\diamond_{R}g^{:\left(C\Rightarrow P^{Q}\right)\Rightarrow B\Rightarrow P^{C}}:\left(C\Rightarrow P^{Q}\right)\Rightarrow A\Rightarrow P^{C}
\]

\end_inset


\size footnotesize

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.0cm}
\end_layout

\end_inset


\size default
use the Kleisli product 
\begin_inset Formula $\diamond_{P}$
\end_inset

 as 
\begin_inset Formula $m^{:A\Rightarrow P^{B}}\diamond_{P}n^{:B\Rightarrow P^{C}}:A\Rightarrow P^{C}$
\end_inset


\size footnotesize
 
\size default
to obtain 
\begin_inset Formula $B\Rightarrow P^{Q}$
\end_inset

 from 
\begin_inset Formula $B\Rightarrow P^{C}$
\end_inset

 and 
\begin_inset Formula $C\Rightarrow P^{Q}$
\end_inset

, and then to get 
\begin_inset Formula $A\Rightarrow P^{C}$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
Use 
\begin_inset Quotes eld
\end_inset

compatibility laws
\begin_inset Quotes erd
\end_inset

: for any monad 
\begin_inset Formula $M$
\end_inset

, and denoting 
\begin_inset Formula $T^{\bullet}\triangleq R^{M^{\bullet}}$
\end_inset


\size footnotesize
,
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.0cm}
\end_layout

\end_inset


\begin_inset Formula 
\[
\text{ftn}_{R}=\text{pure}_{M}^{\uparrow R}\bef\text{ftn}_{T}\quad\quad\quad\quad\quad\quad\left(\text{ftn}_{M}\right)^{\uparrow R}=\text{pure}_{R}^{\uparrow T}\bef\text{ftn}_{T}
\]

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.4cm}
\end_layout

\end_inset


\begin_inset Formula 
\[
\xymatrix{R^{R^{M^{A}}}\ar[rr]\sp(0.5){\text{ftn}_{R}}\ar[rd]\sb(0.4){\text{pure}_{M}^{\uparrow R}} &  & R^{M^{A}} & R^{M^{M^{A}}}\ar[rr]\sp(0.5){\text{ftn}_{M}^{\uparrow R}}\ar[rd]\sb(0.4){\text{pure}_{R}^{\uparrow T}} &  & R^{M^{A}}\\
\xyScaleY{1pc}\xyScaleX{2pc} & R^{M^{R^{M^{A}}}}\ar[ru]\sb(0.6){\text{ftn}_{T}} &  &  & R^{M^{R^{M^{A}}}}\ar[ru]\sb(0.6){\text{ftn}_{T}}
}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Rigid monads IV: Open questions
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset


\size default
What properties of 
\begin_inset Formula $\text{fi}:\left(A\Rightarrow R^{B}\right)\Rightarrow R^{A\Rightarrow B}$
\end_inset

 define rigid monads?
\end_layout

\begin_deeper
\begin_layout Itemize
The law 
\begin_inset Formula $\text{fi}\bef\text{fo}=\text{id}$
\end_inset

 does not appear to be sufficient
\end_layout

\begin_layout Itemize
Not clear if 
\begin_inset Formula $\text{fi}\bef\text{fo}=\text{id}$
\end_inset

 follows from monad laws of 
\begin_inset Formula $R^{M^{\bullet}}$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
A (generalized) functor from Kleisli category to 
\begin_inset Quotes eld
\end_inset

applicative
\begin_inset Quotes erd
\end_inset

 category?
\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.4cm}
\end_layout

\end_inset


\size default
Identity law: 
\begin_inset Formula $\text{fi}\left(\text{pure}_{R}\right)=\text{pure}_{R}\left(\text{id}\right)$
\end_inset

 – this holds
\end_layout

\begin_layout Itemize
Composition law: 
\begin_inset Formula $\text{fi}\left(f\diamond_{R}g\right)=\left(p\times q\Rightarrow p\bef q\right)^{\uparrow R}\left(\text{fi}\,f\bowtie\text{fi}\,g\right)$
\end_inset


\size footnotesize

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset


\size small

\begin_inset Formula 
\[
\xymatrix{\xyScaleY{1pc}\xyScaleX{1.5pc}A\Rightarrow R^{B}\ar[d]\sp(0.4){\text{fi}} & \times\quad\quad B\Rightarrow R^{C}~\ar[d]\sp(0.4){\text{fi}}\ar[rr]\sb(0.5){\text{use }\diamond_{R}} &  & A\Rightarrow R^{C}\ar[d]\sp(0.4){\text{fi}}\\
R^{A\Rightarrow B} & \times\quad\quad R^{B\Rightarrow C}\quad~\ar[r]\sb(0.5){\text{use }\bowtie} & R^{\left(A\Rightarrow B\right)\times\left(B\Rightarrow C\right)}\ar[r]\sb(0.6){~\text{fmap}\left(\bef\right)} & R^{A\Rightarrow C}
}
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.35cm}
\end_layout

\end_inset


\size default
not clear whether this holds in general
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset


\size default
Define the rigid monad transformer using 
\begin_inset Formula $\text{fi}$
\end_inset

?
\end_layout

\begin_layout Itemize
Define 
\begin_inset Formula $\diamond_{T}$
\end_inset

 by 
\size footnotesize

\begin_inset Formula $f\diamond_{T}g\triangleq\text{fo}\big(\left(p\times q\Rightarrow p\diamond_{M}q\right)^{\uparrow R}\left(\text{fi}\,f\bowtie_{R}\text{fi}\,g\right)\big)$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset


\size small

\begin_inset Formula 
\[
\xymatrix{\xyScaleY{1pc}\xyScaleX{1.0pc}\big(A\Rightarrow R^{M^{B}}\big)\ar[d]\sp(0.4){\text{fi}} & \diamond_{T}\quad\quad\big(B\Rightarrow R^{M^{C}}\big)~\ar[d]\sp(0.4){\text{fi}}\ar[rr]\sb(0.5){\text{define }\diamond_{T}\text{ as}} &  & \big(A\Rightarrow R^{M^{C}}\big)\\
R^{A\Rightarrow M^{B}} & \bowtie_{R}~\quad\quad R^{B\Rightarrow M^{C}}\quad~\ar[r] & R^{(A\Rightarrow M^{B})\times(B\Rightarrow M^{C})}\ar[r]\sb(0.6){~\text{fmap}_{R}\left(\diamond_{M}\right)} & R^{A\Rightarrow M^{C}}\ar[u]\sp(0.55){\text{fo}}
}
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.4cm}
\end_layout

\end_inset


\size default
not clear whether this holds
\end_layout

\begin_deeper
\begin_layout Itemize
not clear whether associativity can be shown to hold in general
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Attempts to create a general monad transformer
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.1cm}
\end_layout

\end_inset


\size default
General recipes for combining two functors 
\begin_inset Formula $L^{\bullet}$
\end_inset

 and 
\begin_inset Formula $M^{\bullet}$
\end_inset

 all fail:
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Fake
\begin_inset Quotes erd
\end_inset

 transformers: 
\begin_inset Formula $T_{L}^{M,A}\triangleq L^{A}$
\end_inset

; or 
\begin_inset Formula $T_{L}^{M,A}\triangleq M^{A}$
\end_inset

; or just 
\begin_inset Formula $T_{L}^{M,A}\triangleq1$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
no 
\family typewriter
\size footnotesize
\color blue
lift
\family default
\size default
\color inherit
 and/or no base runner and/or 
\begin_inset Formula $T_{L}^{\text{Id},A}\not\triangleq L^{A}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Functor composition, disjunction, or product: 
\begin_inset Formula $L^{M^{\bullet}}$
\end_inset

, 
\begin_inset Formula $M^{L^{\bullet}}$
\end_inset

, 
\begin_inset Formula $L^{\bullet}+M^{\bullet}$
\end_inset

 – not a monad in general; 
\begin_inset Formula $L^{\bullet}\times M^{\bullet}$
\end_inset

 – no 
\family typewriter
\size footnotesize
\color blue
lift
\family default
\size default
\color inherit
 
\begin_inset Formula $:M^{\bullet}\leadsto L^{\bullet}\times M^{\bullet}$
\end_inset


\end_layout

\begin_layout Itemize
Making a monad out of functor composition or disjunction:
\end_layout

\begin_deeper
\begin_layout Itemize
free monad over 
\begin_inset Formula $L^{M^{\bullet}}$
\end_inset

, 
\begin_inset Formula $\text{Free}^{L^{M^{\bullet}}}$
\end_inset

 – 
\family typewriter
\size footnotesize
\color blue
lift
\family default
\size default
\color inherit
 violates lifting laws
\end_layout

\begin_layout Itemize
free monad over 
\begin_inset Formula $L^{\bullet}+M^{\bullet}$
\end_inset

, 
\begin_inset Formula $\text{Free}^{L^{\bullet}+M^{\bullet}}$
\end_inset

 – 
\family typewriter
\size footnotesize
\color blue
lift
\family default
\size default
\color inherit
 violates lifting laws
\end_layout

\begin_deeper
\begin_layout Itemize
Laws will hold after interpreting the free monad into a concrete monad
\end_layout

\end_deeper
\begin_layout Itemize
codensity monad over 
\begin_inset Formula $L^{M^{\bullet}}$
\end_inset

: 
\begin_inset Formula $F^{A}\triangleq\forall B.\,\big(A\Rightarrow L^{M^{B}}\big)\Rightarrow L^{M^{B}}$
\end_inset

 – no 
\family typewriter
\size footnotesize
\color blue
lift
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Itemize
Codensity-
\begin_inset Formula $L$
\end_inset

 transformer: 
\begin_inset Formula $\text{Cod}_{L}^{M,A}\triangleq\forall B.\left(A\Rightarrow L^{B}\right)\Rightarrow L^{M^{B}}$
\end_inset

 – no 
\family typewriter
\size footnotesize
\color blue
lift
\family default
\size default
\color inherit
 
\end_layout

\begin_deeper
\begin_layout Itemize
applies the continuation transformer to 
\begin_inset Formula $M^{A}\cong\forall B.\left(A\Rightarrow B\right)\Rightarrow M^{B}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Codensity composition: 
\begin_inset Formula $F^{A}\triangleq\forall B.\left(M^{A}\Rightarrow L^{B}\right)\Rightarrow L^{B}$
\end_inset

 – not a monad
\end_layout

\begin_deeper
\begin_layout Itemize
Counterexample: 
\begin_inset Formula $M^{A}\triangleq R\Rightarrow A$
\end_inset

 and 
\begin_inset Formula $L^{A}\triangleq S\Rightarrow A$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Monoidal convolution
\begin_inset Quotes erd
\end_inset

: 
\size small

\begin_inset Formula $\left(L\star M\right)^{A}\triangleq\exists P\exists Q.\left(P\times Q\Rightarrow A\right)\times L^{P}\times M^{Q}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
combines 
\begin_inset Formula $L^{A}\cong\exists P.L^{P}\times\left(P\Rightarrow A\right)$
\end_inset

 with 
\begin_inset Formula $M^{A}\cong\exists Q.M^{Q}\times\left(Q\Rightarrow A\right)$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $L\star M$
\end_inset

 is not a monad for e.g.
\begin_inset space ~
\end_inset


\begin_inset Formula $L^{A}\triangleq1+A$
\end_inset

 and 
\begin_inset Formula $M^{A}\triangleq R\Rightarrow A$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Exercises
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\size small
Show that the method 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size small
\color inherit

\begin_inset Formula $:A\Rightarrow M^{A}$
\end_inset

 is a monadic morphism between monads 
\begin_inset Formula $\text{Id}^{A}\triangleq A$
\end_inset

 and 
\begin_inset Formula $M^{A}$
\end_inset

.
 Show that 
\begin_inset Formula $1\Rightarrow1+A$
\end_inset

 is not a monadic morphism.
\end_layout

\begin_layout Enumerate

\size small
Show that 
\begin_inset Formula $M_{1}^{A}+M_{2}^{A}$
\end_inset

 is 
\emph on
not
\emph default
 a monad when 
\begin_inset Formula $M_{1}^{A}\triangleq1+A$
\end_inset

 and 
\begin_inset Formula $M_{2}^{A}\triangleq Z\Rightarrow A$
\end_inset

.
\end_layout

\begin_layout Enumerate

\size small
Derive the composition law for 
\family typewriter
\size footnotesize
\color blue
lift
\family default
\size small
\color inherit
 written using 
\begin_inset Formula $\text{ftn}$
\end_inset

 as 
\begin_inset Formula $\text{lift}_{1}\bef\text{fmap}_{\text{BigM}}\text{lift}_{1}\bef\text{ftn}_{\text{BigM}}=\text{ftn}_{M_{1}}\bef\text{lift}_{1}$
\end_inset

 from the 
\begin_inset Formula $\text{flm}$
\end_inset

-based law 
\begin_inset Formula $\text{lift}_{1}\bef\text{flm}_{\text{BigM}}\left(q\bef\text{lift}_{1}\right)=\text{flm}_{M_{1}}q\bef\text{lift}_{1}$
\end_inset

.
 Draw type diagrams for both laws.
\end_layout

\begin_layout Enumerate

\size small
Show that the continuation monad is not rigid and does not compose with
 arbitrary other monads.
 Show that the list and state monads are not rigid.
\end_layout

\begin_layout Enumerate

\size small
Show that 
\size footnotesize

\begin_inset Formula $\text{fo}\left(\text{pure}_{P}\left(f^{:A\Rightarrow B}\right)\right)=f\bef\text{pure}_{P}$
\end_inset


\size small
 for any pointed functor 
\begin_inset Formula $P$
\end_inset

.
\end_layout

\begin_layout Enumerate

\size small
A rigid monad has a 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size small
\color inherit
 method because it is a monad, and also another 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size small
\color inherit
 method because it is a rigid functor.
 Show that these two 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size small
\color inherit
 methods must be the same.
\end_layout

\begin_layout Enumerate

\size small
Show that 
\begin_inset Formula $T_{L_{1}}^{M,A}\times T_{L_{2}}^{M,A}$
\end_inset

 is the transformer for the monad 
\begin_inset Formula $L_{1}\times L_{2}$
\end_inset

.

\size default
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
End of slides.
\end_layout

\end_inset


\end_layout

\end_body
\end_document
