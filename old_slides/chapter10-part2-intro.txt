(Part 2 of 4) Functional programming, chapter 10. Free type constructions

Functional programming in the mathematical spirit.

Long and difficult, yet boring explanations given in excruciating detail.

Start by reading the slides, go through the worked examples and exercises. Watch the video when you cannot fully understand something in the slides.

This part covers slides 16 to 19.

Chapter 10: Free type constructions

Motivation for Church encoding
How to use the Church encoding for disjunction types
Church encoding of a free semigroup as a refactoring of the "interpreter" method
Properties of the universally quantified types
Why the Church encoding ∀X.(A ⇒ X) ⇒ X is equivalent to the underlying type, A
Tree encoding of the free functor
Why a "hidden" type parameter in a disjunction translates into an existential type quantifier


Slides: https://github.com/winitzki/talks/blob/master/ftt-fp/10-free-constructions.pdf

Code examples: https://github.com/winitzki/scala-examples/tree/master/chapter10/src
