Functional programming, chapter 3, part 1: The types of higher-order functions

Functional programming in the mathematical spirit.

Long and difficult, yet boring explanations given in excruciating detail.

Start by reading the slides, go through the worked examples and exercises. Watch the video when you cannot fully understand something in the slides.

Chapter 3, part 1.

The types of functions that return functions
"Curried" functions: their syntax e.g. f(x)(y) and how they work
"Curried" type expressions (A ⇒ B ⇒ C)
Scala type inference: how to give the type annotations
How to infer the most generic (parametric) types for higher-order functions
Worked examples and exercises

Slides: https://github.com/winitzki/talks/blob/master/ftt-fp/03-logic-of-types-1.pdf

Code examples: https://github.com/winitzki/scala-examples/tree/master/chapter03/src

Note: There was an error in the last exercise as shown in the video. The last exercise had no solution. Please download the updated version of the slides.
