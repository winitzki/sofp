(3 of 3) Functional programming, chapter 8. Applicative functors and profunctors. Part 2: Theory

Functional programming in the mathematical spirit.

Long and difficult, yet boring explanations given in excruciating detail.

Start by reading the slides, go through the worked examples and exercises. Watch the video when you cannot fully understand something in the slides.

Chapter 8: Applicative functors and profunctors. Part 2: Laws and structure

Portion 3 of 3 covers slides 17 to 22.

Implementing and checking the laws for applicative contrafunctor constructions
Why all exponential-polynomial contrafunctors with monoid coefficients are applicative
Definition and properties of profunctors
Why all exponential-polynomial type constructors are profunctors
Example of a non-profunctor type constructor: a partial type function
Definition and laws of applicative profunctors
Constructions of applicative profunctors; verifying the laws
Commutative applicative functors, their interpretation, and examples
A unified category theory-based picture of "standard" functor classes (functor, contrafunctor, filterable, monad, applicative)
How to use this picture to find laws and to discover new type classes, such as the comonads
Exercises

Slides: https://github.com/winitzki/talks/blob/master/ftt-fp/08-applicatives-part2.pdf

Code examples: https://github.com/winitzki/scala-examples/tree/master/chapter08/src
