#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\usetheme[secheader]{Boadilla}
\usecolortheme{seahorse}
\title[Chapter 7: Functor-lifted computations II]{Chapter 7: Computations lifted to a functor context II. Monads}
\subtitle{Part 2: Laws and structure of monads and semimonads}
\author{Sergei Winitzki}
\date{2018-05-27}
\institute[ABTB]{Academy by the Bay}
\setbeamertemplate{headline}{} % disable headline at top
\setbeamertemplate{navigation symbols}{} % disable navigation bar at bottom
\usepackage[all]{xy}
\makeatletter
% Macros to assist LyX with XYpic when using scaling.
\newcommand{\xyScaleX}[1]{%
\makeatletter
\xydef@\xymatrixcolsep@{#1}
\makeatother
} % end of \xyScaleX
\makeatletter
\newcommand{\xyScaleY}[1]{%
\makeatletter
\xydef@\xymatrixrowsep@{#1}
\makeatother
} % end of \xyScaleY
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frame{
\backslash
titlepage}
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Beginning of slides.
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Semimonad laws I: The intuitions
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
What properties of functor block programs do we expect to have?
\end_layout

\begin_layout Itemize
In 
\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 c
\family default
\size default
\color inherit
, the value of 
\family typewriter
\size footnotesize
\color blue
x
\family default
\size default
\color inherit
 will 
\emph on
go over items
\emph default
 held in container 
\family typewriter
\size footnotesize
\color blue
c
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
Manipulating items in container is followed by a generator:
\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont1
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
y = f(x)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
z 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2(y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
y 
\begin_inset Formula $\leftarrow$
\end_inset

 cont1
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
      .map(x 
\begin_inset Formula $\Rightarrow$
\end_inset

 f(x))
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
z 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2(y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
cont1.flatMap(x 
\begin_inset Formula $\Rightarrow$
\end_inset

 cont2(f(x))) = cont1.map(f).flatMap(y 
\begin_inset Formula $\Rightarrow$
\end_inset

 cont2(y))
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
Manipulating items in container is preceded by a generator:
\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont1
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
y 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2(x)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
z = f(y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont1
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
z 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2(x)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
       .map(f)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset VSpace defskip
\end_inset

cont1.flatMap(cont2).map(f)
\family default
\size default
\color inherit
 
\family typewriter
\size footnotesize
\color blue
= cont1.flatMap(x 
\begin_inset Formula $\Rightarrow$
\end_inset

 cont2(x).map(f))
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
Within a generator, 
\family typewriter
\size footnotesize
\color blue
for {...} yield
\family default
\size default
\color inherit
 can be inlined:
\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
y 
\begin_inset Formula $\leftarrow$
\end_inset

 p(x)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
z 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2(y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
yy 
\begin_inset Formula $\leftarrow$
\end_inset

 for { x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
            y 
\begin_inset Formula $\leftarrow$
\end_inset

 p(x) } yield y
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
z 
\begin_inset Formula $\leftarrow$
\end_inset

 cont2(yy)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset VSpace defskip
\end_inset

cont.flatMap(x 
\begin_inset Formula $\Rightarrow$
\end_inset

 p(x).flatMap(cont2)) = cont.flatMap(p).flatMap(cont2)
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Semimonad laws II: The laws for 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
For brevity, write 
\size footnotesize

\begin_inset Formula $\text{flm}$
\end_inset


\size default
 instead of 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Standard
A 
\series bold
semimonad
\series default
 
\begin_inset Formula $S^{A}$
\end_inset

 has 
\size footnotesize

\begin_inset Formula $\text{flm}^{\left[A,B\right]}:\left(A\Rightarrow S^{B}\right)\Rightarrow S^{A}\Rightarrow S^{B}$
\end_inset


\size default
 with 3 laws:
\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{flm}\,(f^{A\Rightarrow B}\circ g^{B\Rightarrow S^{C}})=\text{fmap}\,f\circ\text{flm}\,g$
\end_inset


\size default
 
\size footnotesize
(naturality in 
\begin_inset Formula $A$
\end_inset

)
\size default
 
\size footnotesize

\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & S^{B}\ar[rd]\sp(0.5){\ \text{flm}\,g^{B\Rightarrow S^{C}}}\\
S^{A}\ar[ru]\sp(0.5){\text{fmap}\,f^{A\Rightarrow B}\ }\ar[rr]\sb(0.5){\text{flm}\,(f^{A\Rightarrow B}\circ\,g^{B\Rightarrow S^{C}})\,} &  & S^{C}
}
\]

\end_inset


\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{flm}\,\big(f^{A\Rightarrow S^{B}}\circ\text{fmap}\,g^{B\Rightarrow C}\big)=\text{flm}\,f\circ\text{fmap}\,g$
\end_inset


\size default
 
\size footnotesize
(naturality in 
\begin_inset Formula $B$
\end_inset

)
\size default
 
\size footnotesize

\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & S^{B}\ar[rd]\sp(0.5){\ \text{fmap}\,g^{B\Rightarrow C}}\\
S^{A}\ar[ru]\sp(0.5){\text{flm}\,f^{A\Rightarrow S^{B}}\ }\ar[rr]\sb(0.5){\text{flm}\,(f^{A\Rightarrow S^{B}}\circ\,\text{fmap}\,g^{B\Rightarrow C})\,} &  & S^{C}
}
\]

\end_inset


\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{flm}\,\big(f^{A\Rightarrow S^{B}}\circ\text{flm}\,g^{B\Rightarrow S^{C}}\big)=\text{flm}\,f\circ\text{flm}\,g$
\end_inset


\size default
 
\size footnotesize
(associativity)
\size default
 
\size footnotesize

\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & S^{B}\ar[rd]\sp(0.5){\ \text{flm}\,g^{B\Rightarrow S^{C}}}\\
S^{A}\ar[ru]\sp(0.5){\text{flm}\,f^{A\Rightarrow S^{B}}\ }\ar[rr]\sb(0.5){\text{flm}\,\big(f^{A\Rightarrow S^{B}}\circ\,\text{flm}\,g^{B\Rightarrow S^{C}}\big)\,} &  & S^{C}
}
\]

\end_inset


\end_layout

\begin_layout Standard
Is there a shorter and clearer formulation of these laws?
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Semimonad laws III: The laws for 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The methods 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 (denoted by 
\size footnotesize

\begin_inset Formula $\text{ftn}$
\end_inset


\size default
) and 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 are equivalent:
\family typewriter
\size footnotesize
\color blue
 
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula 
\begin{align*}
\text{ftn}^{\left[A\right]}:S^{S^{A}}\Rightarrow S^{A} & \equiv\text{flm}^{\left[S^{A},A\right]}(m^{S^{A}}\Rightarrow m)\\
\text{flm}\,\big(f^{A\Rightarrow S^{B}}\big) & \equiv\text{fmap}\,f\circ\text{ftn}
\end{align*}

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & S^{S^{B}}\ar[rd]\sp(0.5){\ \text{ftn}\ }\\
S^{A}\ar[ru]\sp(0.5){\text{fmap}\,f^{A\Rightarrow S^{B}}\ }\ar[rr]\sb(0.5){\text{flm}\,\big(f^{A\Rightarrow S^{B}}\big)\,} &  & S^{B}
}
\]

\end_inset


\end_layout

\end_inset


\begin_inset space \space{}
\end_inset

 
\begin_inset space \space{}
\end_inset

 
\begin_inset space \space{}
\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Standard
It turns out that 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 has only 2 laws:
\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{fmap}\big(\text{fmap}\,f^{A\Rightarrow B}\big)\circ\text{ftn}^{\left[B\right]}=\text{ftn}^{\left[A\right]}\circ\text{fmap}\,f$
\end_inset


\size default
 
\size footnotesize
(naturality)
\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{5pc} & S^{S^{B}}\ar[rd]\sp(0.5){\ \text{ftn}^{\left[B\right]}}\\
S^{S^{A}}\ar[ru]\sp(0.5){\text{fmap}\,\big(\text{fmap}\,f^{A\Rightarrow B}\big)\ \ }\ar[rd]\sb(0.5){\text{ftn}^{\left[A\right]}\,} &  & S^{B}\\
 & S^{A}\ar[ru]\sb(0.5){\text{fmap}\,f^{A\Rightarrow B}}
}
\]

\end_inset


\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{fmap}\,(\text{ftn}^{\left[A\right]})\circ\text{ftn}^{\left[A\right]}=\text{ftn}^{[S^{A}]}\circ\text{ftn}^{\left[A\right]}$
\end_inset


\size default
 
\size footnotesize
(associativity) 
\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{5pc} & S^{S^{A}}\ar[rd]\sp(0.5){\ \text{ftn}^{\left[A\right]}}\\
S^{S^{S^{A}}}\ar[ru]\sp(0.5){\text{fmap}\,(\text{ftn}^{\left[A\right]})\ }\ar[rd]\sb(0.5){\text{ftn}^{[S^{A}]}\,} &  & S^{A}\\
 & S^{S^{A}}\ar[ru]\sb(0.5){\text{ftn}^{\left[A\right]}}
}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Equivalence of a natural transformation and a 
\begin_inset Quotes eld
\end_inset

lifting
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Equivalence of 
\size footnotesize

\begin_inset Formula $\text{flm}$
\end_inset


\size default
 and 
\size footnotesize

\begin_inset Formula $\text{ftn}$
\end_inset


\size default
: 
\size footnotesize

\begin_inset Formula $\text{ftn}=\text{flm}\left(\text{id}\right)$
\end_inset

; 
\begin_inset Formula $\text{flm}\,f=\text{fmap}\,f\circ\text{ftn}$
\end_inset


\size default
 
\end_layout

\begin_layout Itemize
We saw this before: 
\size footnotesize

\begin_inset Formula $\text{deflate}=\text{fmapOpt}\left(\text{id}\right)$
\end_inset


\size default
; 
\size footnotesize

\begin_inset Formula $\text{fmapOpt}\,f=\text{fmap}\:f\circ\text{deflate}$
\end_inset


\size default
 
\end_layout

\begin_deeper
\begin_layout Itemize
Is there a general pattern where two such functions are equivalent?
\end_layout

\end_deeper
\begin_layout Itemize
Let 
\size footnotesize

\begin_inset Formula $\text{tr}:F^{G^{A}}\Rightarrow F^{A}$
\end_inset

 
\size default
be a natural transformation (
\begin_inset Formula $F$
\end_inset

 and 
\begin_inset Formula $G$
\end_inset

 are functors)
\end_layout

\begin_layout Itemize
Define 
\size footnotesize

\begin_inset Formula $\text{ftr}:\left(A\Rightarrow G^{B}\right)\Rightarrow F^{A}\Rightarrow F^{B}$
\end_inset


\size default
 by 
\size footnotesize

\begin_inset Formula $\text{ftr}\,f=\text{fmap}\,f\circ\text{tr}$
\end_inset


\size default
 
\end_layout

\begin_layout Itemize
It follows that 
\size footnotesize

\begin_inset Formula $\text{tr}=\text{ftr}\left(\text{id}\right)$
\end_inset


\size default
, and we have equivalence between 
\size footnotesize

\begin_inset Formula $\text{tr}$
\end_inset


\size default
 and 
\size footnotesize

\begin_inset Formula $\text{ftr}$
\end_inset


\size default
:
\family typewriter
\size footnotesize
\color blue
 
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula 
\begin{align*}
\text{tr}:F^{G^{A}}\Rightarrow F^{A} & =\text{ftr}(m^{G^{A}}\Rightarrow m)\\
\text{ftr}\,\big(f^{A\Rightarrow G^{B}}\big) & =\text{fmap}\,f\circ\text{tr}
\end{align*}

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & F^{G^{B}}\ar[rd]\sp(0.5){\ \text{tr}\ }\\
F^{A}\ar[ru]\sp(0.5){\text{fmap}\,f^{A\Rightarrow G^{B}}\ }\ar[rr]\sb(0.5){\text{ftr}\,\big(f^{A\Rightarrow G^{B}}\big)\,} &  & F^{B}
}
\]

\end_inset


\end_layout

\end_inset


\begin_inset space \space{}
\end_inset

 
\begin_inset space \space{}
\end_inset

 
\begin_inset space \space{}
\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Itemize
An automatic law for 
\size footnotesize

\begin_inset Formula $\text{ftr}$
\end_inset


\size default
 (
\begin_inset Quotes eld
\end_inset

naturality in 
\begin_inset Formula $A$
\end_inset


\begin_inset Quotes erd
\end_inset

) follows from the definition: 
\size footnotesize

\begin_inset Formula $\text{fmap}\,g\circ\text{ftr}\,f=\text{fmap}\,g\circ\text{fmap}\,f\circ\text{tr}=\text{fmap}\left(g\circ f\right)\circ\text{tr}=\text{ftr}\left(g\circ f\right)$
\end_inset


\size default
 
\end_layout

\begin_deeper
\begin_layout Itemize
This is why 
\size footnotesize

\begin_inset Formula $\text{tr}$
\end_inset


\size default
 always has 
\emph on
one law fewer
\emph default
 than 
\size footnotesize

\begin_inset Formula $\text{ftr}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
To demonstrate equivalence in the direction 
\size footnotesize

\begin_inset Formula $\text{ftr}\rightarrow\text{tr}$
\end_inset


\size default
: Start with an arbitrary 
\size footnotesize

\begin_inset Formula $\text{ftr}$
\end_inset


\size default
 satisfying 
\begin_inset Quotes eld
\end_inset

naturality in 
\begin_inset Formula $A$
\end_inset


\begin_inset Quotes erd
\end_inset

, then obtain 
\size footnotesize

\begin_inset Formula $\text{tr}=\text{ftr}\left(\text{id}\right)$
\end_inset


\size default
 from it, then verify 
\size footnotesize

\begin_inset Formula $\text{ftr}\,f=\text{fmap}\,f\circ\text{tr}$
\end_inset


\size default
 with that 
\size footnotesize

\begin_inset Formula $\text{tr}$
\end_inset


\size default
; 
\size footnotesize

\begin_inset Formula $\text{fmap}\,f\circ\text{ftr}\left(\text{id}\right)=\text{ftr}\left(f\circ id\right)=\text{ftr}\,f$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Semimonad laws IV: Deriving the laws for 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Denote for brevity 
\begin_inset Formula $q^{\uparrow}\equiv\text{fmap}\,q$
\end_inset

 for any function 
\begin_inset Formula $q$
\end_inset

 (
\begin_inset Quotes eld
\end_inset

lifting
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $q^{A\Rightarrow B}$
\end_inset

 to 
\begin_inset Formula $S$
\end_inset

)
\end_layout

\begin_layout Standard
Express 
\begin_inset Formula $\text{flm}\,f=f^{\uparrow}\circ\text{ftn}$
\end_inset

 and substitute that into 
\begin_inset Formula $\text{flm}$
\end_inset

's 3 laws:
\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{flm}\left(f\circ g\right)=f^{\uparrow}\circ\text{flm}\,g$
\end_inset


\size default
 gives 
\size footnotesize

\begin_inset Formula $\left(f\circ g\right)^{\uparrow}\circ\text{ftn}=f^{\uparrow}\circ g^{\uparrow}\circ\text{ftn}$
\end_inset


\size default

\begin_inset Newline newline
\end_inset

– this law holds automatically due to functor composition law
\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{flm}\left(f\circ g^{\uparrow}\right)=\text{flm}\,f\circ g^{\uparrow}$
\end_inset


\size default
 gives 
\size footnotesize

\begin_inset Formula $\left(f\circ g^{\uparrow}\right)^{\uparrow}\circ\text{ftn}=f^{\uparrow}\circ\text{ftn}\circ g^{\uparrow}$
\end_inset


\size default
;
\begin_inset Newline newline
\end_inset

using the functor composition law, we reduce this to
\begin_inset Newline newline
\end_inset


\size footnotesize

\begin_inset Formula $g^{\uparrow\uparrow}\circ\text{ftn}=\text{ftn}\circ g^{\uparrow}$
\end_inset


\size default
 – this is the naturality law
\end_layout

\begin_layout Enumerate

\size footnotesize
\begin_inset Formula $\text{flm}\left(f\circ\text{flm}\,g\right)=\text{flm}\,f\circ\text{flm}\,g$
\end_inset

 
\size default
with functor composition law gives
\size footnotesize
 
\begin_inset Formula $f^{\uparrow}\circ g^{\uparrow\uparrow}\circ\text{ftn}^{\uparrow}\circ\text{ftn}=f^{\uparrow}\circ\text{ftn}\circ g^{\uparrow}\circ\text{ftn}$
\end_inset

;
\size default
 using 
\size footnotesize

\begin_inset Formula $\text{ftn}$
\end_inset


\size default
's naturality and omitting the common factor
\size footnotesize
 
\begin_inset Formula $f^{\uparrow}\circ g^{\uparrow\uparrow}$
\end_inset


\size default
, we get
\size footnotesize
 
\begin_inset Formula $\text{ftn}^{\uparrow}\circ\text{ftn}=\text{ftn}\circ\text{ftn}$
\end_inset


\size default
 – associativity law
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 has the simplest type signature 
\emph on
and
\emph default
 the fewest laws
\end_layout

\begin_layout Itemize
It is usually easy to check naturality!
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Parametricity theorem
\series default
: Any 
\emph on
pure, fully parametric
\emph default
 code for a function of type 
\begin_inset Formula $F^{A}\Rightarrow G^{A}$
\end_inset

 will implement a natural transformation
\end_layout

\end_deeper
\begin_layout Itemize
Checking 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
's associativity needs 
\emph on
a lot
\emph default
 more work!
\end_layout

\begin_layout Standard
The 
\family typewriter
\size footnotesize
\color blue
cats
\family default
\size default
\color inherit
 library has a 
\family typewriter
\size footnotesize
\color blue
FlatMap
\family default
\size default
\color inherit
 type class, defining 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 via 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Checking the associativity law for standard monads
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Implement 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 for these functors and check the laws (see code):
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Option
\family default
\size default
\color inherit
 monad: 
\begin_inset Formula $F^{A}\equiv1+A$
\end_inset

; 
\begin_inset Formula $\text{ftn}:1+\left(1+A\right)\Rightarrow1+A$
\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
Either
\family default
\size default
\color inherit
 monad: 
\begin_inset Formula $F^{A}\equiv Z+A$
\end_inset

; 
\begin_inset Formula $\text{ftn}:Z+\left(Z+A\right)\Rightarrow Z+A$
\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
List
\family default
\size default
\color inherit
 monad: 
\begin_inset Formula $F^{A}\equiv\text{List}^{A}$
\end_inset

; 
\begin_inset Formula $\text{ftn}:\text{List}^{\text{List}^{A}}\Rightarrow\text{List}^{A}$
\end_inset


\end_layout

\begin_layout Itemize
Writer monad: 
\begin_inset Formula $F^{A}\equiv A\times W$
\end_inset

; 
\begin_inset Formula $\text{ftn}:\left(A\times W\right)\times W\Rightarrow A\times W$
\end_inset


\end_layout

\begin_layout Itemize
Reader monad: 
\begin_inset Formula $F^{A}\equiv R\Rightarrow A$
\end_inset

; 
\begin_inset Formula $\text{ftn}:\left(R\Rightarrow\left(R\Rightarrow A\right)\right)\Rightarrow R\Rightarrow A$
\end_inset


\end_layout

\begin_layout Itemize
State: 
\begin_inset Formula $F^{A}\equiv S\Rightarrow A\times S$
\end_inset

; 
\begin_inset Formula $\text{ftn}:\left(S\Rightarrow\left(S\Rightarrow A\times S\right)\times S\right)\Rightarrow S\Rightarrow A\times S$
\end_inset


\end_layout

\begin_layout Itemize
Continuation monad: 
\begin_inset Formula $F^{A}\equiv\left(A\Rightarrow R\right)\Rightarrow R$
\end_inset

; 
\begin_inset Formula $\text{ftn}:\left(\left(\left(\left(A\Rightarrow R\right)\Rightarrow R\right)\Rightarrow R\right)\Rightarrow R\right)\Rightarrow\left(A\Rightarrow R\right)\Rightarrow R$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Code implementing these 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 functions is 
\emph on
fully parametric
\emph default
 in 
\begin_inset Formula $A$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Naturality of these functions follows from parametricity theorem
\end_layout

\begin_layout Itemize
Associativity needs to be checked for each monad!
\end_layout

\end_deeper
\begin_layout Itemize
Example of a useful semimonad that is 
\emph on
not
\emph default
 a full monad:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $F^{A}\equiv A\times V\times W$
\end_inset

; 
\begin_inset Formula $\text{ftn}\left(\left(a\times v_{1}\times w_{1}\right)\times v_{2}\times w_{2}\right)=a\times v_{1}\times w_{2}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Examples of 
\emph on
non-associative
\emph default
 (i.e.
\begin_inset space \space{}
\end_inset

wrong) implementations of 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $F^{A}\equiv A\times W\times W$
\end_inset

; 
\begin_inset Formula $\text{ftn}\left(\left(a\times v_{1}\times v_{2}\right)\times w_{1}\times w_{2}\right)=a\times w_{2}\times w_{1}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $F^{A}\equiv\text{List}^{A}$
\end_inset

, but 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 concatenates the nested lists in reverse order
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Motivation for monads
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Monads represent values with a 
\begin_inset Quotes eld
\end_inset

special computational context
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
Specific monads will have methods to create various contexts
\end_layout

\begin_layout Itemize
Monadic composition will 
\begin_inset Quotes eld
\end_inset

combine
\begin_inset Quotes erd
\end_inset

 the contexts associatively
\end_layout

\begin_layout Itemize
It is generally useful to have an 
\begin_inset Quotes eld
\end_inset

empty context
\begin_inset Quotes erd
\end_inset

 available:
\begin_inset Formula 
\[
\text{pure}:A\Rightarrow M^{A}
\]

\end_inset


\end_layout

\begin_layout Standard
Adding the empty context to another context should be a no-op
\end_layout

\begin_layout Itemize
Empty context is followed by a generator:
\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
y 
\begin_inset Formula $\leftarrow$
\end_inset

 pure(x)
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
z 
\begin_inset Formula $\leftarrow$
\end_inset

 cont(y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
y = x
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
z 
\begin_inset Formula $\leftarrow$
\end_inset

 cont(y)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
pure(x).flatMap(y 
\begin_inset Formula $\Rightarrow$
\end_inset

 cont(y)) = cont(x)
\family default
\size default
\color inherit

\begin_inset Formula $\quad\quad\text{pure}\circ\text{flm}\,f=f$
\end_inset

 
\color gray
– left identity
\end_layout

\begin_layout Itemize
Empty context is preceded by a generator:
\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\color blue
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
y 
\begin_inset Formula $\leftarrow$
\end_inset

 pure(x)
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "49col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
x 
\begin_inset Formula $\leftarrow$
\end_inset

 cont
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
y = x
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset VSpace defskip
\end_inset

cont.flatMap(x 
\begin_inset Formula $\Rightarrow$
\end_inset

 pure(x))
\family default
\size default
\color inherit
 
\family typewriter
\size footnotesize
\color blue
= cont
\family default
\size default
\color inherit
 
\begin_inset Formula $\quad\quad\quad\text{flm}\left(\text{pure}\right)=\text{id}$
\end_inset

 
\color gray
– right identity
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
The monad laws formulated in terms of 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Naturality law for 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size default
\color inherit
: 
\begin_inset Formula $f\circ\text{pure}=\text{pure}\circ\text{fmap}\,f$
\end_inset


\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{5pc} & B\ar[rd]\sp(0.5){\ \text{pure}^{\left[B\right]}}\\
A\ar[ru]\sp(0.5){f^{A\Rightarrow B}\ }\ar[rd]\sb(0.5){\text{pure}^{[A]}\,} &  & S^{B}\\
 & S^{A}\ar[ru]\sb(0.5){\text{fmap}\,f^{A\Rightarrow B}}
}
\]

\end_inset


\end_layout

\begin_layout Itemize
Left identity: 
\begin_inset Formula $\text{pure}\circ\text{flm}\,f=\text{pure}\circ\text{fmap}\,f\circ\text{ftn}=f\circ\text{pure}\circ\text{ftn}=f$
\end_inset

 requires that 
\begin_inset Formula $\text{pure}\circ\text{ftn}=\text{id}$
\end_inset

 (both sides applied to 
\begin_inset Formula $S^{A}$
\end_inset

)
\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & S^{S^{A}}\ar[rd]\sp(0.5){\ \text{ftn}^{[A]}\ }\\
S^{A}\ar[ru]\sp(0.5){\text{pure}^{[S^{A}]}\ }\ar[rr]\sb(0.5){\text{id}} &  & S^{A}
}
\]

\end_inset


\end_layout

\begin_layout Itemize
Right identity: 
\begin_inset Formula $\text{flm}\left(\text{pure}\right)=\text{fmap}\left(\text{pure}\right)\circ\text{ftn}=\text{id}^{S^{A}\Rightarrow S^{A}}$
\end_inset


\begin_inset Formula 
\[
\xymatrix{\xyScaleY{0.2pc}\xyScaleX{3pc} & S^{S^{A}}\ar[rd]\sp(0.5){\ \text{ftn}^{[A]}\ }\\
S^{A}\ar[ru]\sp(0.5){\text{fmap}(\text{pure}^{[A]})\quad}\ar[rr]\sb(0.5){\text{id}} &  & S^{A}
}
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Formulating laws via Kleisli functions
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Recall: we formulated the laws of filterables via 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 
\end_layout

\begin_deeper
\begin_layout Itemize
type signature of 
\begin_inset Formula $\text{fmapOpt}:\left(A\Rightarrow1+B\right)\Rightarrow S^{A}\Rightarrow S^{B}$
\end_inset


\end_layout

\begin_layout Itemize
and then we had to compose functions of types 
\begin_inset Formula $A\Rightarrow1+B$
\end_inset

 via 
\begin_inset Formula $\diamond_{\text{Opt}}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Here we have
\size small
 
\begin_inset Formula $\text{flm}:\left(A\Rightarrow S^{B}\right)\Rightarrow S^{A}\Rightarrow S^{B}$
\end_inset


\size default
 instead of 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize
Can we compose 
\series bold
Kleisli functions
\series default
 with 
\begin_inset Quotes eld
\end_inset

twisted
\begin_inset Quotes erd
\end_inset

 type, 
\begin_inset Formula $A\Rightarrow S^{B}$
\end_inset

?
\end_layout

\begin_layout Itemize
Use 
\begin_inset Formula $\text{flm}$
\end_inset

 to define 
\series bold
Kleisli composition
\series default
: 
\begin_inset Formula $f^{A\Rightarrow S^{B}}\diamond g^{B\Rightarrow S^{C}}\equiv f\circ\text{flm}\,g$
\end_inset


\end_layout

\begin_layout Itemize
Define 
\series bold
Kleisli identity
\series default
 
\begin_inset Formula $\text{id}_{\diamond}$
\end_inset

 of type 
\begin_inset Formula $A\Rightarrow S^{A}$
\end_inset

 as 
\begin_inset Formula $\text{id}_{\diamond}\equiv\text{pure}$
\end_inset


\end_layout

\begin_layout Itemize
Composition law: 
\begin_inset Formula $\text{flm}\left(f\diamond g\right)=\text{flm}\,f\circ\text{flm}\,g$
\end_inset

 (same as for 
\family typewriter
\size footnotesize
\color blue
fmapOpt
\family default
\size default
\color inherit
)
\end_layout

\begin_deeper
\begin_layout Itemize
Shows that 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 is a 
\begin_inset Quotes eld
\end_inset

lifting
\begin_inset Quotes erd
\end_inset

 of 
\begin_inset Formula $A\Rightarrow S^{B}$
\end_inset

 to 
\begin_inset Formula $S^{A}\Rightarrow S^{B}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
These laws are similar to functor 
\begin_inset Quotes eld
\end_inset

lifting
\begin_inset Quotes erd
\end_inset

 laws...
\end_layout

\begin_deeper
\begin_layout Itemize
except that 
\begin_inset Formula $\diamond$
\end_inset

 is used for composing Kleisli functions
\end_layout

\end_deeper
\begin_layout Itemize
What are the properties of 
\begin_inset Formula $\diamond$
\end_inset

?
\end_layout

\begin_deeper
\begin_layout Itemize
Exactly similar to the properties of function composition 
\begin_inset Formula $f\circ g$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Reformulate 
\begin_inset Formula $\text{flm}$
\end_inset

's laws in terms of the 
\begin_inset Formula $\diamond$
\end_inset

 operation:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\text{flm}$
\end_inset

's left and right identity laws: 
\begin_inset Formula $\text{pure}\diamond f=f$
\end_inset

 and 
\begin_inset Formula $f\diamond\text{pure}=f$
\end_inset


\end_layout

\begin_layout Itemize
Associativity law: 
\begin_inset Formula $\left(f\diamond g\right)\diamond h=f\diamond\left(g\diamond h\right)$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Follows from the 
\begin_inset Formula $\text{flm}$
\end_inset

 law: 
\begin_inset Formula $f\circ\text{flm}\left(g\circ\text{flm}h\right)=f\circ\text{flm}\,g\circ\text{flm}\,h$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* Motivation for categories and functors
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Compare different 
\begin_inset Quotes eld
\end_inset

liftings
\begin_inset Quotes erd
\end_inset

 seen so far, and generalize
\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.25cm}
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Category
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Type 
\series default

\begin_inset Formula $A\rightsquigarrow B$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Identity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Composition
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
plain functions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $A\Rightarrow B$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\text{id}:A\Rightarrow A$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $f^{A\Rightarrow B}\circ g^{B\Rightarrow C}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lifted to 
\begin_inset Formula $F$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $F^{A}\Rightarrow F^{B}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\text{id}:F^{A}\Rightarrow F^{A}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $f^{F^{A}\Rightarrow F^{B}}\circ g^{F^{B}\Rightarrow F^{C}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kleisli over 
\begin_inset Formula $F$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $A\Rightarrow F^{B}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\text{pure}:A\Rightarrow F^{A}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $f^{A\Rightarrow F^{B}}\diamond g^{B\Rightarrow F^{C}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.15cm}
\end_layout

\end_inset

Category theory generalizes this situation
\end_layout

\begin_layout Standard

\series bold
Category
\series default
: a certain class of 
\begin_inset Quotes eld
\end_inset

twisted functions
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $A\rightsquigarrow B$
\end_inset

 called 
\series bold
morphisms
\end_layout

\begin_layout Itemize
For any two morphisms 
\begin_inset Formula $f^{A\rightsquigarrow B}$
\end_inset

 and 
\begin_inset Formula $g^{B\rightsquigarrow C}$
\end_inset

 the 
\series bold
composition
\series default
 morphism 
\begin_inset Formula $f\diamond g$
\end_inset

 of type 
\begin_inset Formula $A\rightsquigarrow C$
\end_inset

 must exist
\end_layout

\begin_layout Itemize
For each type 
\begin_inset Formula $A$
\end_inset

, the 
\series bold
identity
\series default
 morphism 
\begin_inset Formula $\text{id}_{\diamond}$
\end_inset

 of type 
\begin_inset Formula $A\rightsquigarrow A$
\end_inset

 must exist
\end_layout

\begin_layout Itemize
Composition respects identity: 
\begin_inset Formula $\text{id}_{\diamond}\diamond f=f$
\end_inset

 and 
\begin_inset Formula $f\diamond\text{id}_{\diamond}=f$
\end_inset


\end_layout

\begin_layout Itemize
Composition is associative: 
\begin_inset Formula $\left(f\diamond g\right)\diamond h=f\diamond\left(g\diamond h\right)$
\end_inset


\end_layout

\begin_layout Standard
General 
\series bold
functor
\series default
: a map from one category to another
\end_layout

\begin_layout Itemize
A functor must 
\family typewriter
\size footnotesize
\color blue
fmap
\family default
\size default
\color inherit
 each morphism from one category to the other
\end_layout

\begin_layout Itemize
Functor laws: 
\family typewriter
\size footnotesize
\color blue
fmap
\family default
\size default
\color inherit
 must preserve identity and composition
\end_layout

\begin_deeper
\begin_layout Itemize
What we call 
\begin_inset Quotes eld
\end_inset

functor
\begin_inset Quotes erd
\end_inset

 is called 
\series bold
endofunctor
\series default
 in category theory
\end_layout

\begin_layout Itemize
An endofunctor's 
\family typewriter
\size footnotesize
\color blue
fmap
\family default
\size default
\color inherit
 goes from plain functions to 
\begin_inset Formula $F$
\end_inset

-lifted functions
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
* From Kleisli back to 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The Kleisli functions, 
\begin_inset Formula $A\rightsquigarrow B\equiv A\Rightarrow S^{B}$
\end_inset

, form a category iff 
\begin_inset Formula $S$
\end_inset

 is a monad 
\end_layout

\begin_layout Itemize

\family typewriter
\size footnotesize
\color blue
fmap
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 are computationally equivalent to Kleisli composition:
\end_layout

\begin_deeper
\begin_layout Itemize
Define 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 through Kleisli:
\size small
 
\begin_inset Formula $\text{flm}\,f^{A\Rightarrow S^{B}}\equiv\text{id}^{S^{A}\Rightarrow S^{A}}\diamond f$
\end_inset


\end_layout

\begin_layout Itemize
Require two additional laws that connect 
\begin_inset Formula $\diamond$
\end_inset

, 
\begin_inset Formula $\text{fmap}$
\end_inset

, and 
\begin_inset Formula $\circ$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
Left naturality: 
\size small

\begin_inset Formula $f^{A\Rightarrow B}\circ g^{B\Rightarrow S^{C}}=\left(f\circ\text{pure}\right)\diamond g$
\end_inset


\end_layout

\begin_layout Itemize
Right naturality: 
\size small

\begin_inset Formula $f^{A\Rightarrow S^{B}}\circ\text{fmap}\,g^{B\Rightarrow C}=f\diamond\left(g\circ\text{pure}\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
So, can define 
\family typewriter
\size footnotesize
\color blue
fmap
\family default
\size default
\color inherit
 through Kleisli: 
\begin_inset Formula $\text{fmap}\,g^{A\Rightarrow B}\equiv\text{id}^{S^{A}\Rightarrow S^{A}}\diamond\left(g\circ\text{pure}\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
The laws for 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 then follow from category axioms for Kleisli:
\end_layout

\begin_layout Itemize
Left and right identity laws follow from 
\begin_inset Formula $\text{id}\diamond\text{pure}=\text{id}$
\end_inset

 and 
\begin_inset Formula $\text{pure}\diamond f=f$
\end_inset

 
\end_layout

\begin_layout Itemize
Associativity for 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
 follows from 
\begin_inset Formula $\left(\text{id}\diamond f\right)\diamond g=\text{id}\diamond\left(f\diamond g\right)$
\end_inset


\end_layout

\begin_layout Itemize
Use 
\begin_inset Quotes eld
\end_inset

left naturality
\begin_inset Quotes erd
\end_inset

, get: 
\begin_inset Formula $\left(f\circ g\right)\diamond h=\left(f\circ pure\right)\diamond g\diamond h=f\circ\left(g\diamond h\right)$
\end_inset


\end_layout

\begin_layout Itemize
Naturality for 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size default
\color inherit
: 
\begin_inset Formula $\text{pure}\circ\text{fmap}\,f=\text{pure}\diamond\left(f\circ\text{pure}\right)=f\circ\text{pure}$
\end_inset


\end_layout

\begin_layout Itemize
Define 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
: 
\begin_inset Formula $\text{ftn}=\text{id}^{S^{S^{A}}\Rightarrow S^{S^{A}}}\diamond\text{id}^{S^{A}\Rightarrow S^{A}}$
\end_inset


\end_layout

\begin_layout Itemize
Naturality for 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
: 
\begin_inset Formula $\text{ftn}\circ\text{fmap}\,f=\text{id}\diamond\text{id}\diamond\left(f\circ\text{pure}\right)=\text{id}\diamond\text{fmap}\,f$
\end_inset

 and 
\begin_inset Formula $\text{fmap}\left(\text{fmap}\,f\right)\circ\text{ftn}=\text{id}\diamond\left(\left(\text{fmap}\,f\right)\circ\text{pure}\right)\circ\text{id}\diamond\text{id}=\text{id}\diamond\text{fmap}\,f$
\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Structure of semigroups and monoids
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Semimonad contexts are combined associatively, as in a semigroup
\end_layout

\begin_deeper
\begin_layout Itemize
A full monad includes an 
\begin_inset Quotes eld
\end_inset

empty
\begin_inset Quotes erd
\end_inset

 context, i.e.
\begin_inset space \space{}
\end_inset

the identity element
\end_layout

\begin_layout Itemize
Semigroup with an identity element is a monoid
\end_layout

\end_deeper
\begin_layout Standard
Some constructions of semigroups and monoids (see code):
\end_layout

\begin_layout Enumerate
Any type 
\begin_inset Formula $Z$
\end_inset

 is a semigroup with operation 
\begin_inset Formula $z_{1}\circledast z_{2}=z_{1}$
\end_inset

 (or 
\begin_inset Formula $z_{2}$
\end_inset

)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $1+S$
\end_inset

 is a monoid if 
\begin_inset Formula $S$
\end_inset

 is (at least) a semigroup (or 
\begin_inset Formula $S\equiv0$
\end_inset

)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\text{List}^{A}$
\end_inset

 is a monoid (for any type 
\begin_inset Formula $A$
\end_inset

), also 
\begin_inset Formula $\text{Seq}^{A}$
\end_inset

 etc.
\end_layout

\begin_layout Enumerate
The function type 
\begin_inset Formula $A\Rightarrow A$
\end_inset

 is a monoid (for any type 
\begin_inset Formula $A$
\end_inset

)
\end_layout

\begin_deeper
\begin_layout Itemize
The operation 
\begin_inset Formula $f\circledast g$
\end_inset

 can be either 
\begin_inset Formula $f\circ g$
\end_inset

 or 
\begin_inset Formula $g\circ f$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Any totally ordered type is a monoid, with 
\begin_inset Formula $\circledast$
\end_inset

 defined as 
\begin_inset Formula $\max$
\end_inset

 or 
\begin_inset Formula $\min$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $S_{1}\times S_{2}$
\end_inset

 is a semigroup (monoid) if 
\begin_inset Formula $S_{1}$
\end_inset

, 
\begin_inset Formula $S_{2}$
\end_inset

 are semigroups (monoids)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $S_{1}+S_{2}$
\end_inset

 is a semigroup (monoid) if 
\begin_inset Formula $S_{1}$
\end_inset

, 
\begin_inset Formula $S_{2}$
\end_inset

 are semigroups (monoids)
\end_layout

\begin_layout Enumerate

\family typewriter
\size footnotesize
\color blue
M[S]
\family default
\size default
\color inherit
 is a monoid if 
\family typewriter
\size footnotesize
\color blue
M[_]
\family default
\size default
\color inherit
 is a monad and 
\family typewriter
\size footnotesize
\color blue
S
\family default
\size default
\color inherit
 is a monoid
\end_layout

\begin_layout Enumerate
\begin_inset Formula $S\times P$
\end_inset

 is a semigroup if 
\begin_inset Formula $S$
\end_inset

 is a semigroup that has an 
\series bold
action on
\series default
 
\begin_inset Formula $P$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The 
\begin_inset Quotes eld
\end_inset

action
\begin_inset Quotes erd
\end_inset

 is 
\begin_inset Formula $\alpha:S\Rightarrow P\Rightarrow P$
\end_inset

 such that 
\begin_inset Formula $\alpha(s_{2})\circ\alpha(s_{1})=\alpha(s_{1}\circledast s_{2})$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $S\times P$
\end_inset

 is a 
\begin_inset Quotes eld
\end_inset

twisted product.
\begin_inset Quotes erd
\end_inset

 Examples: 
\begin_inset Formula $\left(A\Rightarrow A\right)\times A$
\end_inset

; 
\begin_inset Formula $\text{Bool}\times\left(1+A\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Other examples of monoids: 
\begin_inset Formula $\text{Int}$
\end_inset

 (many), 
\begin_inset Formula $\text{String}$
\end_inset

, 
\begin_inset Formula $\text{Set}^{A}$
\end_inset

, Akka's 
\family typewriter
\size footnotesize
\color blue
Route
\family default
\size default
\color inherit
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Structure of (semi)monads
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
How to recognize a (semi)monad by its type? Open question!
\end_layout

\begin_layout Standard
Intuition from 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
: reshuffle data in 
\begin_inset Formula $F^{F^{A}}$
\end_inset

 to fit into 
\begin_inset Formula $F^{A}$
\end_inset


\end_layout

\begin_layout Standard
Some constructions of exponential-polynomial (semi)monads:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv Z$
\end_inset

 (constant functor) for a fixed type 
\begin_inset Formula $Z$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
For a full monad, need to choose 
\begin_inset Formula $Z=1$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv A\times G^{A}$
\end_inset

 for any functor 
\begin_inset Formula $G^{A}$
\end_inset

 (a full monad only if 
\begin_inset Formula $G^{A}$
\end_inset

 is a monad)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{A}\times H^{A}$
\end_inset

 for any (semi)monads 
\begin_inset Formula $G^{A}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
but 
\begin_inset Formula $G^{A}+H^{A}$
\end_inset

 is generally 
\emph on
not
\emph default
 a semimonad
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv R\Rightarrow G^{A}$
\end_inset

 is a (semi)monad for any (semi)monad 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv A+G^{A}$
\end_inset

 is a monad for a monad 
\begin_inset Formula $G^{A}$
\end_inset

 (
\series bold
free pointed
\series default
 over 
\begin_inset Formula $G$
\end_inset

)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{Z+A\times W}$
\end_inset

 is a monad if 
\begin_inset Formula $G$
\end_inset

 is a monad and 
\begin_inset Formula $W$
\end_inset

 a monoid
\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv A+G^{F^{A}}$
\end_inset

 (recursive) for any functor 
\begin_inset Formula $G^{A}$
\end_inset

 (
\series bold
free monad
\series default
 over 
\begin_inset Formula $G$
\end_inset

)
\end_layout

\begin_deeper
\begin_layout Standard

\emph on
Semimonad-only
\emph default
 constructions:
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv G^{A}+G^{F^{A}}$
\end_inset

 (recursive) for any functor 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $F^{A}\equiv H^{A}\Rightarrow A\times G^{A}$
\end_inset

 for any contrafunctor 
\begin_inset Formula $H^{A}$
\end_inset

 and functor 
\begin_inset Formula $G^{A}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Obtain a full monad only when 
\begin_inset Formula $G^{A}\equiv1$
\end_inset

, i.e.
\begin_inset space \space{}
\end_inset


\begin_inset Formula $F^{A}\equiv H^{A}\Rightarrow A$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Exercises II
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{-0.2cm}
\end_layout

\end_inset

Show that 
\family typewriter
\size footnotesize
\color blue
M[S]
\family default
\size default
\color inherit
 is a monoid if 
\family typewriter
\size footnotesize
\color blue
M[_]
\family default
\size default
\color inherit
 is a monad and 
\family typewriter
\size footnotesize
\color blue
S
\family default
\size default
\color inherit
 is a monoid.
\end_layout

\begin_layout Enumerate
A framework implements a 
\begin_inset Quotes eld
\end_inset

route
\begin_inset Quotes erd
\end_inset

 type 
\begin_inset Formula $R$
\end_inset

 as 
\begin_inset Formula $R\equiv Q\Rightarrow\left(E+S\right)$
\end_inset

, where 
\begin_inset Formula $Q$
\end_inset

 is a query, 
\begin_inset Formula $E$
\end_inset

 is an error response, and 
\begin_inset Formula $S$
\end_inset

 is a success response.
 A server is defined as a 
\begin_inset Quotes eld
\end_inset

sum
\begin_inset Quotes erd
\end_inset

 of several routes.
 For a given query 
\begin_inset Formula $Q$
\end_inset

, the response is the first route (if it exists) that yields a success.
 Implement the route 
\begin_inset Quotes eld
\end_inset

summation
\begin_inset Quotes erd
\end_inset

 operation and show that it makes 
\begin_inset Formula $R$
\end_inset

 into a semigroup.
 What would be necessary to make 
\begin_inset Formula $R$
\end_inset

 into a monoid?
\end_layout

\begin_layout Enumerate
Verify the associativity law for the semimonad 
\begin_inset Formula $F^{A}\equiv Z+\text{Bool}\times A$
\end_inset

.
\end_layout

\begin_layout Enumerate
Show that the functor 
\begin_inset Formula $F^{A}\equiv\text{Boolean}\times M^{A}$
\end_inset

 (where 
\begin_inset Formula $M^{A}$
\end_inset

 is an arbitrary monad) can be made into a semimonad but not into a monad.
\end_layout

\begin_layout Enumerate
If 
\begin_inset Formula $W$
\end_inset

 and 
\begin_inset Formula $R$
\end_inset

 are arbitrary fixed types, which of the functors can be made into a semimonad:
 
\begin_inset Formula $F^{A}\equiv W\times\left(R\Rightarrow A\right)$
\end_inset

, 
\begin_inset Formula $G^{A}=R\Rightarrow\left(W\times A\right)$
\end_inset

?
\end_layout

\begin_layout Enumerate
Show that 
\begin_inset Formula $F^{A}\equiv\left(P\Rightarrow A\right)+\left(Q\Rightarrow A\right)$
\end_inset

 is not a semimonad (cannot define 
\family typewriter
\size footnotesize
\color blue
flatMap
\family default
\size default
\color inherit
) when 
\begin_inset Formula $P$
\end_inset

 and 
\begin_inset Formula $Q$
\end_inset

 are arbitrary, different types.
\end_layout

\begin_layout Enumerate
Implement the 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size default
\color inherit
 methods for 
\begin_inset Formula $D^{A}\equiv1+A\times A$
\end_inset

 (
\family typewriter
\size footnotesize
\color blue
type D[A] = Option[(A, A)]
\family default
\size default
\color inherit
) in at least two significantly different ways, and show that the monad
 laws always fail to hold.
 (
\begin_inset Formula $D^{A}$
\end_inset

 is not a monad!)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Exercises II (continued)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[]
\backslash
addtocounter{enumi}{7}
\backslash
vspace*{-0.5cm}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
A programmer implemented the 
\family typewriter
\size footnotesize
\color blue
fmap
\family default
\size default
\color inherit
 method for 
\size footnotesize

\begin_inset Formula $F^{A}\equiv A\times\left(A\Rightarrow Z\right)$
\end_inset

 
\size default
as
\end_layout

\begin_deeper
\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
def fmap[A,B](f: A
\begin_inset Formula $\Rightarrow$
\end_inset

B): ((A, A
\begin_inset Formula $\Rightarrow$
\end_inset

Z)) 
\begin_inset Formula $\Rightarrow$
\end_inset

 (B, B
\begin_inset Formula $\Rightarrow$
\end_inset

Z) =
\end_layout

\begin_layout LyX-Code

\family typewriter
\size footnotesize
\color blue
  { case (a, az) 
\begin_inset Formula $\Rightarrow$
\end_inset

 (f(a), (_: B) 
\begin_inset Formula $\Rightarrow$
\end_inset

 az(a)) }
\end_layout

\begin_layout Standard
Show that this implementation fails to satisfy the functor laws.
\end_layout

\end_deeper
\begin_layout Enumerate
Show that 
\begin_inset Formula $P^{A}\equiv Z+W\times A$
\end_inset

 is a (full) monad if 
\begin_inset Formula $W$
\end_inset

 is a monoid.
\end_layout

\begin_layout Enumerate
Verify that the full monad laws hold for construction 4.
\end_layout

\begin_layout Enumerate
Implement 
\family typewriter
\size footnotesize
\color blue
flatten
\family default
\size default
\color inherit
 and 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size default
\color inherit
 for 
\begin_inset Formula $F^{A}\equiv A+\left(R\Rightarrow A\right)$
\end_inset

, where 
\begin_inset Formula $R$
\end_inset

 is a fixed type, and show that all the monad laws hold.
\end_layout

\begin_layout Enumerate
For construction 5, show that an identity law would fail if 
\family typewriter
\size footnotesize
\color blue
pure
\family default
\size default
\color inherit
 were defined as 
\family typewriter
\size footnotesize
\color blue
a 
\begin_inset Formula $\Rightarrow$
\end_inset

 Right(Monad[G].pure(a))
\family default
\size default
\color inherit
 instead of as 
\family typewriter
\size footnotesize
\color blue
Left(a)
\family default
\size default
\color inherit
.
\end_layout

\begin_layout Enumerate
Implement the monad methods for 
\begin_inset Formula $F^{A}\equiv\left(Z\Rightarrow1+A\right)\times\text{List}^{A}$
\end_inset

 using the known monad constructions (no need to check the laws).
\end_layout

\begin_layout Enumerate
Implement the semimonad construction 2 by discarding the first effect (not
 the second), and show that the associativity law is still satisfied.
\end_layout

\begin_layout Enumerate
For semimonad construction 8, show that the associativity law holds.
\end_layout

\begin_layout Enumerate
Verify the identity laws for the State and Continuation monads.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Addendum: Miscellaneous remarks on monads
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.2cm}
\end_layout

\end_inset

A non-empty list 
\begin_inset Formula $F^{A}\equiv A\times\text{List}^{A}$
\end_inset

 is a semigroup but not a monoid.
\end_layout

\begin_layout Itemize

\size footnotesize
Any polynomial functor 
\begin_inset Formula $F^{A}\equiv p(A)$
\end_inset

 can be made into a monad when 
\begin_inset Formula $p(x)$
\end_inset

 is a polynomial of the form 
\begin_inset Formula $p(x)=x^{n_{1}}+x^{n_{2}}+...+x^{n_{k}}$
\end_inset

 for some 
\emph on
positive
\emph default
 integers 
\begin_inset Formula $n_{1}$
\end_inset

, ..., 
\begin_inset Formula $n_{k}$
\end_inset

.
 Indeed, any 
\begin_inset Formula $F^{A}$
\end_inset

 of this form may be built from the identity monad via constructions 3 and
 5.
 To illustrate this, denote 
\begin_inset Formula $E_{1}\equiv1$
\end_inset

, 
\begin_inset Formula $E_{n+1}\equiv1+E_{n}$
\end_inset

.
 Monoid construction 2 makes 
\begin_inset Formula $E_{n}$
\end_inset

 into monoids.
 Then the monads 
\begin_inset Formula $E_{n}\Rightarrow A$
\end_inset

 (reader) and 
\begin_inset Formula $E_{n}\times A$
\end_inset

 (writer) are equivalent to polynomial monads 
\begin_inset Formula $A\times...\times A$
\end_inset

 and 
\begin_inset Formula $A+...+A$
\end_inset

.
\end_layout

\begin_layout Itemize

\size footnotesize
Contrafunctors cannot be monads or semimonads: if 
\begin_inset Formula $H^{A}$
\end_inset

 is a contrafunctor then 
\begin_inset Formula $H^{H^{A}}$
\end_inset

 is a 
\emph on
functor
\emph default
, so a natural transformation between 
\begin_inset Formula $H^{H^{A}}$
\end_inset

 and 
\begin_inset Formula $H^{A}$
\end_inset

 (in either direction) is impossible.
\end_layout

\begin_layout Itemize

\size footnotesize
An example of combining natural transformations: Given functors 
\begin_inset Formula $C$
\end_inset

, 
\begin_inset Formula $F$
\end_inset

, 
\begin_inset Formula $G$
\end_inset

 and natural transformations 
\begin_inset Formula $C^{A}\Rightarrow F^{A}$
\end_inset

 and 
\begin_inset Formula $C^{A}\Rightarrow G^{A}$
\end_inset

 and taking the product, we get a natural transformation 
\begin_inset Formula $C^{A}\Rightarrow F^{A}\times G^{A}$
\end_inset

.
 
\end_layout

\begin_layout Itemize

\size footnotesize
If 
\begin_inset Formula $M^{A}$
\end_inset

 is a monad then 
\begin_inset Formula $M^{M^{A}}$
\end_inset

 is not automatically a monad (need counterexample?).
\end_layout

\begin_layout Itemize

\size footnotesize
Two monadic values 
\begin_inset Formula $m_{1},m_{2}:M^{A}$
\end_inset

 can be merged by ignoring the payload of one of them and merging the effects;
 and we can merge the effects in any chosen order: 
\family typewriter
\color blue
for { x 
\begin_inset Formula $\leftarrow$
\end_inset

 m
\begin_inset Formula $_{1}$
\end_inset

; _ 
\begin_inset Formula $\leftarrow$
\end_inset

 m
\begin_inset Formula $_{2}$
\end_inset

 } yield x
\family default
\color inherit
 or 
\family typewriter
\color blue
for { _ 
\begin_inset Formula $\leftarrow$
\end_inset

 m
\begin_inset Formula $_{1}$
\end_inset

; x 
\begin_inset Formula $\leftarrow$
\end_inset

 m
\begin_inset Formula $_{2}$
\end_inset

 } yield x
\family default
\size default
\color inherit
 
\end_layout

\begin_layout Itemize

\size footnotesize
A curious example: The functor 
\begin_inset Formula $Q^{A}\equiv\left(A\Rightarrow Z\right)\Rightarrow1+A$
\end_inset

 is not a monad (and not even a lawful applicative) but 
\begin_inset Formula $M^{A}\equiv\left(A\Rightarrow1+1\right)\Rightarrow1+A$
\end_inset

 is a 
\begin_inset Quotes eld
\end_inset

search monad
\begin_inset Quotes erd
\end_inset

.
 More generally, a 
\begin_inset Quotes eld
\end_inset

selector monad
\begin_inset Quotes erd
\end_inset

 is 
\begin_inset Formula $\left(A\Rightarrow P^{1}\right)\Rightarrow P^{A}$
\end_inset

 for any functor 
\begin_inset Formula $P^{A}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
End of slides.
\end_layout

\end_inset


\end_layout

\end_body
\end_document
