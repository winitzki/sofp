(1 of 3) Functional programming, chapter 8. Applicative functors and profunctors. Part 2: Theory

Functional programming in the mathematical spirit.

Long and difficult, yet boring explanations given in excruciating detail.

Start by reading the slides, go through the worked examples and exercises. Watch the video when you cannot fully understand something in the slides.

Chapter 8: Applicative functors and profunctors. Part 2: Laws and structure

Portion 1 of 3 covers slides 1 to 15.

How to generalize `map2`, `map3`, `map4` to `mapN` in a systematic way
Motivation behind introducing the `ap` and `zip` methods for applicative functors
Computational equivalence of `map2`, `ap`, and `zip`
Motivation for the applicative laws: rewrite the monad laws in terms of `map2`
Deriving the laws for `zip` to uncover the monoidal structure of the laws
Defining `pure` through "wrapped unit"
Recovering the 3rd naturality law for `map2`
Deriving the laws for the applicative category
Deriving the laws for `ap` as functor "lifting" laws from category laws
Overview of applicative functor constructions

Slides: https://github.com/winitzki/talks/blob/master/ftt-fp/08-applicatives-part2.pdf

Code examples: https://github.com/winitzki/scala-examples/tree/master/chapter08/src
