Functional programming, chapter 2: The functional approach to collections in Scala

Functional programming in the mathematical spirit.

Long and difficult, yet boring explanations given in excruciating detail.

Start by reading the slides, go through the worked examples and exercises. Watch the video when you cannot fully understand something in the slides.

Chapter 2.

Tuples and pattern matching
Using tuples with Map[] and Seq[] collections (zip, map, flatMap, etc.)
Writing functions with type parameters
Implementing mathematical induction with recursion
Tail recursion and the accumulator trick
Using fold, foldLeft, scan, iterate instead of writing recursion by hand
Worked examples and exercises

Slides: https://github.com/winitzki/talks/blob/master/ftt-fp/02-functional-collections.pdf

Code examples: https://github.com/winitzki/scala-examples/tree/master/chapter02/src
